// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ko');

goog.require('Blockly.Msg');

/** @export */ Blockly.Msg.ADD_COMMENT = "메모 추가";
/** @export */ Blockly.Msg.AEROBOT_BACKWARD = "Backward";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_CENTER = "Center";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_DISTSENS_TITLE = "DistSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_DISTSENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_FORWARD = "Forward";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_HELPURL = "http://affordableeducationrobot.github.io/v1.0/";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LIGHTSENS_TITLE = "LightSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LIGHTSENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LINESENS_TITLE = "LineSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LINESENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_MOVE_TITLE = "Move";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_MOVE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_NONE = "None";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_TITLE = "Rotate";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_SETLED_TITLE = "SetLedColor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_SETLED_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_STOP = "Stop";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_TURN_LEFT = "TurnLeft";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_TURN_RIGHT = "TurnRight";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_WARNING = "Need to install AERobot library";  // untranslated
/** @export */ Blockly.Msg.BLUE = "Blue";  // untranslated
/** @export */ Blockly.Msg.BLYNK_AUTH = "Auth";  // untranslated
/** @export */ Blockly.Msg.BLYNK_CONNECT_TITLE = "Connectted";  // untranslated
/** @export */ Blockly.Msg.BLYNK_CONNECT_TOOLTIP = "Check connection";  // untranslated
/** @export */ Blockly.Msg.BLYNK_EMAIL_TITLE = "Send Email";  // untranslated
/** @export */ Blockly.Msg.BLYNK_EMAIL_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_ETHERNET_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.BLYNK_ETHERNET_BEGIN_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_HELPURL = "https://github.com/blynkkk/blynk-library";  // untranslated
/** @export */ Blockly.Msg.BLYNK_MERGE_PARAM_TITLE = "Get Merge Parameter";  // untranslated
/** @export */ Blockly.Msg.BLYNK_MERGE_PARAM_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_NOTIFY_TITLE = "Push Notify";  // untranslated
/** @export */ Blockly.Msg.BLYNK_NOTIFY_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_PARAM_TITLE = "Get Parameter";  // untranslated
/** @export */ Blockly.Msg.BLYNK_PARAM_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_TWEET_TITLE = "Tweet";  // untranslated
/** @export */ Blockly.Msg.BLYNK_TWEET_TOOPTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_VIRTUAL_WRITE_TITLE = "Send Virtual Value";  // untranslated
/** @export */ Blockly.Msg.BLYNK_VIRTUAL_WRITE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_WRITE_TITLE = "Get Virtual Action";  // untranslated
/** @export */ Blockly.Msg.BLYNK_WRITE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "'%2' 함수 정의의 일부이기 때문에 '%1' 변수를 삭제할 수 없습니다";
/** @export */ Blockly.Msg.CHANGE = "Change";  // untranslated
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "값 바꾸기:";
/** @export */ Blockly.Msg.CLEAN_UP = "블록 정리";
/** @export */ Blockly.Msg.COL = "Col";  // untranslated
/** @export */ Blockly.Msg.COLLAPSE_ALL = "블록 축소";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "블록 축소";
/** @export */ Blockly.Msg.COLOR = "Color";  // untranslated
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "색 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "색 2";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "비율";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "혼합";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "두 색을 주어진 비율로 혼합 (0.0 - 1.0)";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ko.wikipedia.org/wiki/색";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "팔레트에서 색을 고릅니다";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "임의 색상";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "무작위로 색을 고릅니다.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "파랑";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "초록";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "빨강";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "색";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "빨강,파랑,초록의 값을 이용하여 색을 만드십시오. 모든 값은 0과 100 사이에 있어야 합니다.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://ko.wikipedia.org/wiki/%EC%A0%9C%EC%96%B4_%ED%9D%90%EB%A6%84";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "반복 중단";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "다음 반복";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "현재 반복 실행 블럭을 빠져나갑니다.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "나머지 반복 부분을 더 이상 실행하지 않고, 다음 반복을 수행합니다.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "경고 : 이 블록은 반복 실행 블럭 안에서만 사용됩니다.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://ko.wikipedia.org/wiki/For_%EB%A3%A8%ED%94%84#.EC.9E.84.EC.9D.98.EC.9D.98_.EC.A7.91.ED.95.A9";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "각 항목에 대해 %1 목록으로 %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "리스트 안에 들어있는 각 아이템들을, 순서대로 변수 '%1' 에 한 번씩 저장시키고, 그 때 마다 명령을 실행합니다.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://ko.wikipedia.org/wiki/For_%EB%A3%A8%ED%94%84";
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "으로 계산 %1 %2에서 %4을 이용하여 %3로";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "변수 \"%1\"은 지정된 간격으로 시작 수에서 끝 수까지를 세어 지정된 블록을 수행해야 합니다.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "\"만약\" 블럭에 조건 검사를 추가합니다.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "\"만약\" 블럭의 마지막에, 모든 검사 결과가 거짓인 경우 실행할 부분을 추가합니다.";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://ko.wikipedia.org/wiki/%EC%A1%B0%EA%B1%B4%EB%AC%B8";
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "섹션을 추가, 제거하거나 순서를 변경하여 이 if 블럭을 재구성합니다.";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "아니라면";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "다른 경우";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "만약";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "조건식의 계산 결과가 참이면, 명령을 실행합니다.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "조건식의 계산 결과가 참이면, 첫 번째 블럭의 명령을 실행하고, 그렇지 않으면 두 번째 블럭의 명령을 실행합니다.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "첫 번째 조건식의 계산 결과가 참이면, 첫 번째 블럭의 명령을 실행하고, 두 번째 조건식의 계산 결과가 참이면, 두 번째 블럭의 명령을 실행합니다.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "첫 번째 조건식의 계산 결과가 참이면, 첫 번째 블럭의 명령을 실행하고, 두 번째 조건식의 계산 결과가 참이면, 두 번째 블럭의 명령을 실행하고, ... , 어떤 조건식의 계산 결과도 참이 아니면, 마지막 블럭의 명령을 실행합니다.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://ko.wikipedia.org/wiki/For_루프";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "하기";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "%1회 반복";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "여러 번 반복해 명령들을 실행합니다.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://ko.wikipedia.org/wiki/While_%EB%A3%A8%ED%94%84";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "다음까지 반복";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "동안 반복";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "값이 거짓일 때, 몇 가지 선언을 합니다.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "값이 참일 때, 몇 가지 선언을 합니다.";
/** @export */ Blockly.Msg.DATA_LENGTH = "Data Length";  // untranslated
/** @export */ Blockly.Msg.DATA_TYPE = "DataType";  // untranslated
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "모든 블록 %1개를 삭제하겠습니까?";
/** @export */ Blockly.Msg.DELETE_BLOCK = "블록 삭제";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "'%1' 변수를 삭제합니다";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "'%2' 변수에서 %1을(를) 삭제하시겠습니까?";
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "블록 %1개 삭제";
/** @export */ Blockly.Msg.DEVICE_ID = "DeviceID";  // untranslated
/** @export */ Blockly.Msg.DHT_HELPURL = "https://github.com/adafruit/DHT-sensor-library";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_C = "Temperature C";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_F = "Temperature F";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_H = "Humidity %";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_SENSOR = "Sensor";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_TOOLTIP = "The DHT sensors are made of two parts; a capacitive humidity sensor and a thermistor.";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_TYPE = "Content";  // untranslated
/** @export */ Blockly.Msg.DHT_WARNING = "Need to install the (adafruit) DHT-sensor-library";  // untranslated
/** @export */ Blockly.Msg.DIRECTION = "Direction";  // untranslated
/** @export */ Blockly.Msg.DISABLE_BLOCK = "블록 비활성화";
/** @export */ Blockly.Msg.DOUBLE = "Double";  // untranslated
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "복제";
/** @export */ Blockly.Msg.ELEVATION = "Elevation";  // untranslated
/** @export */ Blockly.Msg.EMAIL_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.EMAIL_BODY = "Body";  // untranslated
/** @export */ Blockly.Msg.EMAIL_TITLE = "Title";  // untranslated
/** @export */ Blockly.Msg.ENABLE_BLOCK = "블록 활성화";
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_HELPURL = "https://www.arduino.cc/en/Reference/ClientAvailable";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_TITLE = "Clinet.availalbe";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_TOOLTIP = "Returns the number of bytes available for reading (that is; the amount of data that has been written to the client by the server it is connected to).";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_DHCP_TITLE = "Begin (DHCP)";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_DHCP_TOOLTIP = "Using Ethernet.begin(mac) with the proper network setup; the Ethernet shield will automatically obtain an IP address.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_HELPURL = "https://www.arduino.cc/en/Reference/EthernetBegin";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_HELPURL = "https://www.arduino.cc/en/Reference/ClientPrintln";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_TITLE = "Client.Println";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_TOOLTIP = "Print data; followed by a carriage return and newline; to the server a client is connected to. Prints numbers as a sequence of digits; each an ASCII character (e.g. the number 123 is sent as the three characters '1'; '2'; '3').";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_HELPURL = "https://www.arduino.cc/en/Reference/ClientPrint";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_TITLE = "Client.Print";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_TOOLTIP = "Print data to the server that a client is connected to. Prints numbers as a sequence of digits; each an ASCII character (e.g. the number 123 is sent as the three characters '1'; '2'; '3').";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_HELPURL = "https://www.arduino.cc/en/Reference/ClientConnected";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_TITLE = "Clinet.Connected";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_TOOLTIP = "Returns true if the client is connected; false if not.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_HELPURL = "https://www.arduino.cc/en/Reference/ClientConnect";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_TITLE = "Clinet.Connect";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_TOOLTIP = "Connects to a specified IP address and port. The return value indicates success or failure. Also supports DNS lookups when using a domain name.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_TITLE = "GET Request";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_TOOLTIP = "Create GET Request.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_HELPURL = "https://www.arduino.cc/en/Reference/EthernetLocalIP";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_TITLE = "localIP";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_TOOLTIP = "Retruns the IP address of the Ethernet shield";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_MAC_ADDRESS_TOOLTIP = "Edit Mac Address";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_DATA = "Data";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_TITLE = "POST Request";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_TOOLTIP = "Create POST Request.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_HELPURL = "https://www.arduino.cc/en/Reference/ClientRead";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_TITLE = "Client.Read";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_TOOLTIP = "Read the next byte received from the server the client is connected to (after the last call to read()).";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_HELPURL = "https://www.arduino.cc/en/Reference/ClientStop";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_TITLE = "Client.Stop";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_TOOLTIP = "Disconnect from the server.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_1 = "Eternet";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_2 = "Eternet2";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_V2 = "Eternet_v2";  // untranslated
/** @export */ Blockly.Msg.EXPAND_ALL = "블록 확장";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "블록 확장";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "외부 입력";
/** @export */ Blockly.Msg.FALLING = "Falling";  // untranslated
/** @export */ Blockly.Msg.GREEN = "Green";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Button";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_TITLE = "Button";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_TOOLTIP = "Basic digital input";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Buzzer";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_TITLE = "Piezo Buzzer";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_TOOLTIP = "Emit a tone when the output is high";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Infrared_Emitter";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_SEND_TITLE = "Send";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_SEND_TOOLTIP = "Send Data.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_TITLE = "Infrared Emitter";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_WARNING = "Need to install the (Grove) IRSendRev Library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_CHECK_DATA_TITLE = "Check Data";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_CHECK_DATA_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_DATA_TITLE = "Received Data";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_DATA_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Infrared_Receiver";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_TOOLTIP = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_WARNING = "Need to install the (Grove) IRSendRev Library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_RECEIVE_TITLE = "Receive";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_RECEIVE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_TITLE = "Infrared Receiver";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_TITLE = "LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_TOOLTIP = "LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Light_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_TITLE = "Light Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_TOOLTIP = "output Low Value in bright light. High Value is darkness.";  // untranslated
/** @export */ Blockly.Msg.GROVE_PIN = "PIN#";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Relay";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_TITLE = "Relay";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_TOOLTIP = "capable of switching a much higher voltages and currents. The maximum voltage and current that can be controlled by this module upto 250V at 10 amps.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_AUTOSCROLL_TITLE = "AutoScroll";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_AUTOSCROLL_TOOLTIP = "Turns on automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_TOOLTIP = "Initializes the interface to the LCD screen; and specifies the dimensions (width and height) of the display.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_WARNING = "Need to install the Grove_LCD_RGB_Backlight library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_CLEAR_TITLE = "Clear";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_CLEAR_TOOLTIP = "Clears the LCD screen and positions the cursor in the upper-left corner.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_LCD_RGB_Backlight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_INIT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalConstructor";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_LEFTTORIGHT_TITLE = "LeftToRight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_LEFTTORIGHT_TOOLTIP = "Set the direction for text written to the LCD to left-to-right; the default.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_NOAUTOSCROLL_TITLE = "NoAutoScroll";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_NOAUTOSCROLL_TOOLTIP = "Turns off automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_PRINT_TITLE = "Print";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_PRINT_TOOLTIP = "Prints text to the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_RIGHTTOLEFT_TITLE = "RightToLeft";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_RIGHTTOLEFT_TOOLTIP = "Set the direction for text written to the LCD to right-to-left (the default is left-to-right). ";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_LEFT_TITLE = "ScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_LEFT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the left.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_RIGHT_TITLE = "ScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_RIGHT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the right.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SETCURSOR_TITLE = "setCursor";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_TITLE = "LCD RGB";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Rotary_Angle_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_TITLE = "Rotary Angle";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_TOOLTIP = "Analog output between 0 and Vcc";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Sound_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_TITLE = "Sound Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_TOOLTIP = "Detect the sound strength of the environment";  // untranslated
/** @export */ Blockly.Msg.GROVE_STAT = "Stat";  // untranslated
/** @export */ Blockly.Msg.GROVE_TEMP_SENSOR_TITLE = "Temporature Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_TEMP_SENSOR_TOOLTIP = "return number of ambient temperature in ℃";  // untranslated
/** @export */ Blockly.Msg.GROVE_TILT_SWITCH_TITLE = "Tilt Switch";  // untranslated
/** @export */ Blockly.Msg.GROVE_TILT_SWITCH_TOOLTIP = "When the switch is level it is open; and when tilted; the switch closes.";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Touch_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_TITLE = "Touch";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_TOOLTIP = "Basic digital input";  // untranslated
/** @export */ Blockly.Msg.HELP = "도움말";
/** @export */ Blockly.Msg.I2C_MATRIX_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_BEGIN_WARNING = "Need to install the Adafruit-LED-Backpack-Library and the Adafruit-GFX-Library.";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_CLEAR = "Clear";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DIAMETER = "Diamater";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DOTS = "Dots";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWCIRCLE = "DrawCircle";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWCOLON = "drawColon";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWLINE = "DrawLine";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWPIXEL = "DrawPixel";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWRECT = "DrawRect";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_FILLRECT = "FillRect";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_HELPURL = "https://github.com/adafruit/Adafruit-LED-Backpack-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_LED_OFF = "Led off";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_LED_ON = "Led on";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_NUM = "Num";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_PRINT = "Print";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETCURSOR = "Cursor";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETROTATION = "Rotation";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTCOLOR = "TextColor";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTSIZE = "TextSize";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTWRAP = "TextWrap";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_TEXT = "text";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_TYPE = "Type";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WRITEDIGITNUM = "writeDigitNum";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WRITEDISPLAY = "WriteDisplay";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X = "x";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X0 = "x0";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X1 = "x1";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y = "y";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y0 = "y0";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y1 = "y1";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BEGIN_WARNING = "Need to install the Adafruit-LED-Backpack-Library and the Adafruit-GFX-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BOOLEAN_FALSE = "hidden";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BOOLEAN_TRUE = "display";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_COLON = "Colon";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_DOTS = "Colon";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_HELPURL = "https://github.com/adafruit/Adafruit-LED-Backpack-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_NUM = "Number";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_PRINT = "Print";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_TITLE = "7 Segment";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WARNING = "Need to Begin blocks";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WRITEDIGITNUM = "WriteDigitNum";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WRITEDISPLAY = "WriteDisplay";  // untranslated
/** @export */ Blockly.Msg.IFTTT_EVENT = "Event";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_TITLE = "Create GET Request URL";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_TOOLTIP = "Create GET Request URL of IFTTT.";  // untranslated
/** @export */ Blockly.Msg.IFTTT_KEY = "Key";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE1 = "Value1";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE2 = "Value2";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE3 = "Value3";  // untranslated
/** @export */ Blockly.Msg.INDEX = "Index";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_APPENDTEXT = "add setup()";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_HELPURL = "http://www.arduino.cc/en/Reference/Setup";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_TOOLTIP = "The setup() function is called when a sketch starts.";  // untranslated
/** @export */ Blockly.Msg.INLINE_INPUTS = "내부 입력";
/** @export */ Blockly.Msg.INOUT_ANALOGPIN_TEXT = "Analog Pin";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_APPENDTEXT = "AnalogRead PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_HELPURL = "http://arduino.cc/en/Reference/AnalogRead";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_TOOLTIP = "Return value between 0 and 1024.";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_APPENDTEXT_PIN = "AnalogWrite PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_APPENDTEXT_VALUE = "value";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_HELPURL = "http://arduino.cc/en/Reference/AnalogWrite";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_TOOLTIP = "Write analog value between 0 and 255 to a specific Port.";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITALPIN_TEXT = "Digital Pin";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_APPENDTEXT_PIN = "DigitalRead PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_APPENDTEXT_PULLUP = "pullup";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_HELPURL = "http://arduino.cc/en/Reference/DigitalRead";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_APPENDTEXT_PIN = "DigitalWrite PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_APPENDTEXT_STAT = "Stat";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_HELPURL = "http://arduino.cc/en/Reference/DigitalWrite";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_TOOLTIP = "Write digital value to a specific Port.";  // untranslated
/** @export */ Blockly.Msg.INOUT_HIGH = "HIGH";  // untranslated
/** @export */ Blockly.Msg.INOUT_LOW = "LOW";  // untranslated
/** @export */ Blockly.Msg.INOUT_OFF = "OFF";  // untranslated
/** @export */ Blockly.Msg.INOUT_ON = "ON";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_PIN = "Pulsein Pin#";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_TIMEOUT = "Timeout";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_TYPE = "Type";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_HELPURL = "http://arduino.cc/en/Reference/pulseIn";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_TOOLTIP = "Reads a pulse (either HIGH or LOW) on a pin.";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_DURATION = "duration";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_FREQ = "frequency";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_PIN = "tone Pin#";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_HELPURL = "http://arduino.cc/en/reference/tone";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_TOOLTIP = "The pin can be connected to a piezo buzzer or other speaker to play tones.";  // untranslated
/** @export */ Blockly.Msg.INTEGER = "Integer";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_HELPURL = "https://www.arduino.cc/en/Reference/AttachInterrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_TITLE = "Attach Interrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_TOOLTIP = "The first parameter to attachInterrupt is an interrupt number.";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_HELPURL = "https://www.arduino.cc/en/Reference/DetachInterrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_TITLE = "Detach Interrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_TOOLTIP = "Turns off the given interrupt.";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_HELPURL = "https://www.arduino.cc/en/Reference/Interrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_HELPURL = "https://www.arduino.cc/en/Reference/NoInterrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_TITLE = "noInterrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_TOOLTIP = "Disables interrupts (you can re-enable them with interrupts()).";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_TITLE = "interrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_TOOLTIP = "Re-enables interrupts (after they've been disabled by noInterrupts()). ";  // untranslated
/** @export */ Blockly.Msg.IOS_CANCEL = "취소";
/** @export */ Blockly.Msg.IOS_ERROR = "오류";
/** @export */ Blockly.Msg.IOS_OK = "확인";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ADD_INPUT = "+ 입력 추가";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS = "Allow statements";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR = "이 기능은 중복된 입력이 있습니다.";
/** @export */ Blockly.Msg.IOS_PROCEDURES_INPUTS = "INPUTS";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_BUTTON = "추가";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE = "+ 변수 추가";
/** @export */ Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON = "삭제";
/** @export */ Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR = "비어있는 변수 이름을 사용할 수 없습니다.";
/** @export */ Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON = "이름 바꾸기";
/** @export */ Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME = "변수 이름";
/** @export */ Blockly.Msg.IP_ADDRESS = "IP Address";  // untranslated
/** @export */ Blockly.Msg.LATITUDE = "Latitude";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalAutoscroll";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_TITLE = "AutoScroll";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_TOOLTIP = "Turns on automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalBegin";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_TITLE = "begin";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_TOOLTIP = "Initializes the interface to the LCD screen; and specifies the dimensions (width and height) of the display.";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalClear";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_TITLE = "Clear";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_TOOLTIP = "Clears the LCD screen and positions the cursor in the upper-left corner.";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D4 = "D4";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D5 = "D5";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D6 = "D6";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D7 = "D7";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_ENABLE = "enable";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalConstructor";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_RS = "rs";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_RW = "rw";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_TITLE = "Pin#";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_TOOLTIP = "Creates a variable of type LiquidCrystal.";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalLeftToRight";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_TITLE = "LeftToRight";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_TOOLTIP = "Set the direction for text written to the LCD to left-to-right; the default.";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalNoAutoscroll";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_TITLE = "NoAutoScroll";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_TOOLTIP = "Turns off automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalPrint";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_TITLE = "Print";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_TOOLTIP = "Prints text to the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalRightToLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_TITLE = "RightToLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_TOOLTIP = "Set the direction for text written to the LCD to right-to-left (the default is left-to-right). ";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_TITLE = "ScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the left.";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_TITLE = "ScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the right.";  // untranslated
/** @export */ Blockly.Msg.LCD_SETCURSOR_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalSetCursor";  // untranslated
/** @export */ Blockly.Msg.LCD_SETCURSOR_TITLE = "setCursor";  // untranslated
/** @export */ Blockly.Msg.LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "빈 리스트 생성";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "데이터 레코드가 없는, 길이가 0인 목록을 반환합니다.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "리스트";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "섹션을 추가, 제거하거나 순서를 변경하여 이 리스트 블럭을 재구성합니다.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "리스트 만들기";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "아이템을 리스트에 추가합니다.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "원하는 수의 항목들로 목록을 생성합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "첫 번째";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "마지막 번째 위치부터, # 번째";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "가져오기";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "잘라 내기";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "마지막";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "임의로";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "삭제";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "첫 번째 아이템을 찾아 돌려줍니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "목록에서 특정 위치의 항목을 반환합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "마지막 아이템을 찾아 돌려줍니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "리스트의 아이템들 중, 랜덤으로 선택해 돌려줍니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "첫 번째 아이템을 찾아내 돌려주고, 그 아이템을 리스트에서 삭제합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "목록의 특정 위치에 있는 항목을 제거하고 반환합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "마지막 아이템을 찾아내 돌려주고, 그 아이템을 리스트에서 삭제합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "목록에서 임의 위치의 아이템을 찾아내 삭제하고 돌려줍니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "리스트에서 첫 번째 아이템을 삭제합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "목록에서 특정 위치의 항목을 삭제합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "리스트에서 마지막 아이템을 찾아 삭제합니다.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "리스트에서 랜덤하게 아이템을 삭제합니다.";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "끝에서부터 # 번째로";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "앞에서부터 # 번째로";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "마지막으로";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "첫 번째 위치부터, 서브 리스트 추출";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "마지막부터 # 번째 위치부터, 서브 리스트 추출";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "처음 # 번째 위치부터, 서브 리스트 추출";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "목록의 특정 부분에 대한 복사본을 만듭니다.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1은(는) 마지막 항목입니다.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1은 첫 번째 항목입니다.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "처음으로 나타난 위치";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "마지막으로 나타난 위치";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "목록에서 항목이 처음 또는 마지막으로 발생한 색인 위치를 반환합니다. 항목이 없으면 %1을 반환합니다.";
/** @export */ Blockly.Msg.LISTS_INLIST = "리스트";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1이 비어 있습니다";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "목록이 비었을 때 참을 반환합니다.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "%1의 길이";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "목록의 길이를 반환합니다.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "%1을 %2번 넣어, 리스트 생성";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "원하는 값을, 원하는 갯수 만큼 넣어, 목록을 생성합니다.";
/** @export */ Blockly.Msg.LISTS_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
/** @export */ Blockly.Msg.LISTS_REVERSE_MESSAGE0 = "reverse %1";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_TOOLTIP = "Reverse a copy of a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "에";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "에서 원하는 위치에 삽입";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "에서 설정";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "항목을 목록의 처음 위치에 삽입합니다.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "목록의 특정 위치에 항목을 삽입합니다.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "리스트의 마지막에 아이템을 추가합니다.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "목록에서 임의 위치에 아이템을 삽입합니다.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "첫 번째 위치의 아이템으로 설정합니다.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "목록의 특정 위치에 있는 항목으로 설정합니다.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "마지막 아이템으로 설정합니다.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "목록에서 임의 위치의 아이템을 설정합니다.";
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "오름차순";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "내림차순";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "정렬 %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "목록의 사본을 정렬합니다.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "알파벳순 (대소문자 구분 안 함)";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "숫자순";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "알파벳순";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "텍스트에서 목록 만들기";
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "목록에서 텍스트 만들기";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "구분 기호로 구분하여 텍스트 목록을 하나의 텍스트에 병합합니다.";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "각 속보, 텍스트의 목록들에서 텍스트를 분할합니다.";
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "분리와";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "거짓";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://ko.wikipedia.org/wiki/%EC%A7%84%EB%A6%BF%EA%B0%92";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "참 혹은 거짓 모두 반환합니다.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "참";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://ko.wikipedia.org/wiki/부등식";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "두 값이 같으면, 참(true) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "첫 번째 값이 두 번째 값보다 크면, 참(true) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "첫 번째 값이 두 번째 값보다 크거나 같으면, 참(true) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "첫 번째 값이 두 번째 값보다 작으면, 참(true) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "첫 번째 값이 두 번째 값보다 작거나 같으면, 참(true) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "두 값이 서로 다르면, 참(true) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://ko.wikipedia.org/wiki/%EB%B6%80%EC%A0%95";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "%1가 아닙니다";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "입력값이 거짓이라면 참을 반환합니다. 참이라면 거짓을 반환합니다.";
/** @export */ Blockly.Msg.LOGIC_NULL = "빈 값";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "빈 값을 반환합니다.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "그리고";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://ko.wikipedia.org/wiki/%EB%B6%88_%EB%85%BC%EB%A6%AC";
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "또는";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "두 값이 모두 참(true) 값이면, 참 값을 돌려줍니다.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "적어도 하나의 값이 참일 경우 참을 반환합니다.";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "테스트";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://ko.wikipedia.org/wiki/물음표";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "만약 거짓이라면";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "만약 참이라면";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "'test'의 조건을 검사합니다. 조건이 참이면 'if true' 값을 반환합니다. 거짓이면 'if false' 값을 반환합니다.";
/** @export */ Blockly.Msg.LONGITUDE = "Longitude";  // untranslated
/** @export */ Blockly.Msg.LOW = "Low";  // untranslated
/** @export */ Blockly.Msg.M2X_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.M2X_BEGIN_TOOLTIP = "Set Config.";  // untranslated
/** @export */ Blockly.Msg.M2X_CUSTOM_LIST_VALUE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_DATE0_TITLE = "Start";  // untranslated
/** @export */ Blockly.Msg.M2X_DATE1_TITLE = "End";  // untranslated
/** @export */ Blockly.Msg.M2X_DELETE_VALUES_TITLE = "Delete Value";  // untranslated
/** @export */ Blockly.Msg.M2X_DELETE_VALUES_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_HELPURL = "https://m2x.att.com/developer/tutorials/arduino";  // untranslated
/** @export */ Blockly.Msg.M2X_KEY = "Access Key";  // untranslated
/** @export */ Blockly.Msg.M2X_LIST_VALUE_TITLE = "Get DataList";  // untranslated
/** @export */ Blockly.Msg.M2X_LIST_VALUE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_LOCATION_NAME = "Location name";  // untranslated
/** @export */ Blockly.Msg.M2X_READ_LOCATION_TITLE = "Read Location";  // untranslated
/** @export */ Blockly.Msg.M2X_READ_LOCATION_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_STREAM_NAME = "Stream Name";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_LOCATION_TITLE = "Update Location";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_LOCATION_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_VALUE_TITLE = "Update";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_VALUE_TOOLTIP = "Update Data to M2X";  // untranslated
/** @export */ Blockly.Msg.MAC_ADDRESS = "Mac Address";  // untranslated
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ko.wikipedia.org/wiki/산술";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "두 수의 합을 반환합니다.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "두 수의 나눈 결과를 반환합니다.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "두 수간의 차이를 반환합니다.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "두 수의 곱을 반환합니다.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "첫 번째 수를 두 번째 수 만큼, 거듭제곱 한 결과값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "바꾸기 %1 만큼 %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "변수 '%1' 에 저장되어있는 값에, 어떤 수를 더해, 변수에 다시 저장합니다.";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ko.wikipedia.org/wiki/수학_상수";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "일반적인 상수 값들 중 하나를 돌려줍니다. : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://ko.wikipedia.org/wiki/%ED%81%B4%EB%9E%A8%ED%95%91_(%EA%B7%B8%EB%9E%98%ED%94%BD)";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "%1의 값을, 최소 %2 최대 %3으로 조정";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "어떤 수를, 특정 범위의 값이 되도록 강제로 조정합니다.";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "가 다음 수로 나누어 떨어지면 :";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "가 짝수(even) 이면";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "가 음(-)수 이면";
/** @export */ Blockly.Msg.MATH_IS_ODD = "가 홀수(odd) 이면";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "가 양(+)수 이면";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "가 소수(prime) 이면";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "어떤 수가 짝 수, 홀 수, 소 수, 정 수, 양 수, 음 수, 나누어 떨어지는 수 인지 검사해 결과값을 돌려줍니다. 참(true) 또는 거짓(false) 값을 돌려줌.";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "가 정수이면";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "%1 ÷ %2의 나머지";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "첫 번째 수를 두 번째 수로 나눈, 나머지 값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "x";
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "https://ko.wikipedia.org/wiki/수_(수학)";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "수";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "평균값";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "최대값";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "중간값";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "최소값";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "가장 여러 개 있는 값";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "목록의 임의 항목";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "표준 편차";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "합";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "리스트에 들어있는 수(값)들에 대해, 산술 평균(arithmetic mean) 한 값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "리스트에 들어있는 수(값) 들 중, 가장 큰(max) 수(값)를 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "리스트에 들어있는 수(값) 들 중, 중간(median) 수(값)를 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "리스트에 들어있는 수(값) 들 중, 가장 작은(min) 수(값)를 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "리스트에 들어있는 아이템들 중에서, 가장 여러 번 들어있는 아이템들을 리스트로 만들어 돌려줍니다. (최빈값, modes)";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "목록에서 임의의 아이템을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "이 리스트의 표준 편차를 반환합니다.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "리스트에 들어있는 수(값)들을, 모두 합(sum) 한, 총합(sum)을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "임의 분수";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "0.0 (포함)과 1.0 (배타적) 사이의 임의 분수 값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = "랜덤정수(%1<= n <=%2)";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "두 주어진 제한된 범위 사이의 임의 정수값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "https://ko.wikipedia.org/wiki/반올림";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "반올림";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "버림";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "올림";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "어떤 수를 반올림/올림/버림한 결과를, 정수값으로 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "https://ko.wikipedia.org/wiki/제곱근";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "절대값";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "제곱근";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "어떤 수의 절대값(absolute)을 계산한 결과를, 정수값으로 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "e의 거듭제곱 값을 반환합니다.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "어떤 수의, 자연로그(natural logarithm) 값을 돌려줍니다.(밑 e, 예시 log e x)";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "어떤 수의, 기본로그(logarithm) 값을 돌려줍니다.(밑 10, 예시 log 10 x)";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "음(-)/양(+), 부호를 반대로 하여 값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "10의 거듭제곱 값을 반환합니다.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "숫자의 제곱근을 반환합니다.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "acos";
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "asin";
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "atan";
/** @export */ Blockly.Msg.MATH_TRIG_COS = "cos";
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "https://ko.wikipedia.org/wiki/삼각함수";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "sin";
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "tan";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "어떤 수에 대한, acos(arccosine) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "어떤 수에 대한, asin(arcsine) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "어떤 수에 대한, atan(arctangent) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "각도의 코사인을 반환합니다. (라디안 아님)";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "각도의 사인을 반환합니다. (라디안 아님)";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "각도의 탄젠트를 반환합니다. (라디안 아님)";
/** @export */ Blockly.Msg.MODE = "Mode";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_TOOLTIP = "initialize the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_WARNING = "Need to install the Adafruit_MPR121 library.";  // untranslated
/** @export */ Blockly.Msg.MPR121_HELPURL = "https://learn.adafruit.com/adafruit-mpr121-12-key-capacitive-touch-sensor-breakout-tutorial/wiring#download-adafruit-mpr121";  // untranslated
/** @export */ Blockly.Msg.MPR121_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.MPR121_RELEASED_TITLE = "Released";  // untranslated
/** @export */ Blockly.Msg.MPR121_RELEASED_TOOLTIP = "relesed the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_RESET_TITLE = "Reset";  // untranslated
/** @export */ Blockly.Msg.MPR121_RESET_TOOLTIP = "Reset the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_TOUCHED_TITLE = "Touched";  // untranslated
/** @export */ Blockly.Msg.MPR121_TOUCHED_TOOLTIP = "touched the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_VALUE_TITLE = "Capacitance Value";  // untranslated
/** @export */ Blockly.Msg.MPR121_VALUE_TOOLTIP = "value of capacitance";  // untranslated
/** @export */ Blockly.Msg.MPR121_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_BRIGHTNESS = "Brightness";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_NUM = "LED Num";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_SETTING = "Init";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_TOOLTIP = "This initializes the NeoPixel library.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_WARNING = "Need to install the Adafruit_NeoPixel Library.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_B = "B";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_G = "G";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_R = "R";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_TOOLTIP = "pixels.Color takes RGB values; from 0;0;0 up to 255;255;255";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_TOOLTIP = "Set pixels.Color.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SHOW = "Show";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SHOW_TOOLTIP = "This sends the updated pixel color to the hardware.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_WARNING = "Need to Begin Block.";  // untranslated
/** @export */ Blockly.Msg.NEW_VARIABLE = "변수 만들기...";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "새 변수 이름:";
/** @export */ Blockly.Msg.OFF = "Off";  // untranslated
/** @export */ Blockly.Msg.ON = "On";  // untranslated
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
/** @export */ Blockly.Msg.PIN = "Pin";  // untranslated
/** @export */ Blockly.Msg.PORT = "Port";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "서술 허가";
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "사용:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://ko.wikipedia.org/wiki/함수_(프로그래밍)";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "미리 정의해 둔 '%1' 함수를 실행합니다.";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://ko.wikipedia.org/wiki/함수_(프로그래밍)";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "미리 정의해 둔 '%1' 함수를 실행하고, 함수를 실행한 결과 값을 돌려줍니다.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "사용:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "'%1' 생성";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "이 함수를 설명하세요...";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://ko.wikipedia.org/wiki/%ED%95%A8%EC%88%98_%28%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "함수 이름";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "함수";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "실행 후, 결과 값을 돌려주지 않는 함수를 만듭니다.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://ko.wikipedia.org/wiki/%ED%95%A8%EC%88%98_%28%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "다음을 돌려줌";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "실행 후, 결과 값을 돌려주는 함수를 만듭니다.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "경고: 이 함수에는, 같은 이름을 사용하는 매개 변수들이 있습니다.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "함수 정의 찾기";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "값이 참이라면, 두 번째 값을 반환합니다.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "경고: 이 블럭은, 함수 정의 블럭 안에서만 사용할 수 있습니다.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "매개 변수:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "함수에 값을 더합니다.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "매개 변수들";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "이 함수를 추가, 삭제, 혹은 재정렬합니다.";
/** @export */ Blockly.Msg.RED = "Red";  // untranslated
/** @export */ Blockly.Msg.REDO = "다시 실행";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "내용 제거";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "변수 이름 바꾸기:";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "'%1' 변수 이름을 바꾸기:";
/** @export */ Blockly.Msg.RGBLED_BEGIN_BRIGHTNESS = "Brightness";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_NUM = "LED Num";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_SETTING = "Init";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_TOOLTIP = "This initializes the NeoPixel library.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_WARNING = "Need to install the Adafruit_NeoPixel Library.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_B = "B";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_G = "G";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_R = "R";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_TOOLTIP = "pixels.Color takes RGB values; from 0;0;0 up to 255;255;255";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SETPIXELCOLOR_TOOLTIP = "Set pixels.Color.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW = "Show";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW_TOOLTIP = "This sends the updated pixel color to the hardware.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_WARNING = "Need to Begin Block.";  // untranslated
/** @export */ Blockly.Msg.RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.RISING = "Rising";  // untranslated
/** @export */ Blockly.Msg.ROW = "Row";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_APPENDTEXT = "Serial Available";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_HELPURL = "http://www.arduino.cc/en/Serial/available";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_TOOLTIP = "Get the number of bytes (characters) available for reading from the serial port.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER = "Byte Code of Number";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER_TEXT1 = "Byte code of";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_APPENDTEXT = "Serial Println";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_HELPURL = "http://www.arduino.cc/en/Serial/Println";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_TOOLTIP = "Prints data to the serial port as human-readable ASCII text followed by a carriage return character and a newline characte.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_APPENDTEXT = "Serial Print";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_HELPURL = "http://www.arduino.cc/en/Serial/Print";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_TOOLTIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_APPENDTEXT = "Serial Read";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_HELPURL = "http://www.arduino.cc/en/Serial/Read";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_TOOLTIP = "the first byte of incoming serial data available (or -1 if no data is available).";  // untranslated
/** @export */ Blockly.Msg.SERVER = "Server";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_TEXT1 = "Angle";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_US_TEXT1 = "Angle(uS)";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_US_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_HELPURL = "http://www.arduino.cc/en/Reference/ServoAttached";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TEXT1 = "Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TEXT2 = "Attached?";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TOOLTIP = "Check whether the Servo variable is attached to a pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_HELPURL = "http://www.arduino.cc/en/Reference/ServoAttach";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MAX_TEXT1 = "Max";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MAX_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MIN_TEXT1 = "Min";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MIN_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TEXT1 = "Attach Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TOOLTIP = "Attach the Servo variable to a pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_HELPURL = "http://www.arduino.cc/en/Reference/ServoDetach";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TEXT1 = "Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TEXT2 = "Detach";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TOOLTIP = "Detach the Servo variable from its pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_HELPURL = "http://www.arduino.cc/en/Reference/ServoRead";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TEXT1 = "Read Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TEXT2 = "Current Angle";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TOOLTIP = "Read the current angle of the servo (the value passed to the last call to write()).";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_HELPURL = "http://www.arduino.cc/en/Reference/ServoWrite";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TEXT1 = "Write Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TOOLTIP = "Writes a value to the servo; controlling the shaft accordingly.";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_US_HELPURL = "http://www.arduino.cc/en/Reference/ServoWriteMicroseconds";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_US_TOOLTIP = "Writes a value in microSeconds(uS) to the servo; controlling the shaft accordingly.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_BACKWARD = "Backward";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_CONTROL = "Control";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_DRIVE_TITLE = "Drive";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_DRIVE_TOOLTIP = "All purpose drive call. Calls leftMotor and rightMotor directly.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_LEFTTOOLTIP = "Disables the left motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_LEFT_TITLE = "FastStop(left)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_RIGHT_TITLE = "FastStop(right)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_RIGHT_TOOLTIP = "Disables the right motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_TITLE = "FastStop";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_TOOLTIP = "Disables the motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FORWARD = "Forward";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_HELPURL = "http://www.seeedstudio.com/wiki/Shield_Bot_V1.2";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_LEFT_SPEED = "Left";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOTOR = "Motor";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOTOR_TOOLTIP = "Enables the right or left motor; negative for backwards; positive for forwards.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOVE_TITLE = "Move";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOVE_TOOLTIP = "Move Carbot.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_READ_SENSOR_TITLE = "Read Sensor";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_READ_SENSOR_TOOLTIP = "Reads any of the 5 light sensors on board.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_RIGHT_SPEED = "Right";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_LR_TOOLTIP = "Write a max speed to the left and right motor. Between 0(basically off) and 255(full speed)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_TITLE = "MotorSpeed";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_TOOLTIP = "Set max speed of two motors. Between 0(basically off) and 255(full speed)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOP = "Stop";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOPLEFT = "StopLeft";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOPRIGHT = "StopRight";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_WARNING = "Need to install Shield Bot 1.2 library";  // untranslated
/** @export */ Blockly.Msg.STRING = "String";  // untranslated
/** @export */ Blockly.Msg.TEXT = "Text";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
/** @export */ Blockly.Msg.TEXT_APPEND_TITLE = "다음 %1 내용 덧붙이기 %2";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "'%1' 변수의 끝에 일부 텍스트를 덧붙입니다.";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "소문자로";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "첫 문자만 대문자로";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "대문자로";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "영문 대소문자 형태를 변경해 돌려줍니다.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "에서, 첫 번째 문자 얻기";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "에서, 마지막부터 # 번째 위치의 문자 얻기";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "에서, 앞에서부터 # 번째 위치의 문자 얻기";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "에서, 마지막 문자 얻기";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "에서, 랜덤하게 한 문자 얻기";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";
/** @export */ Blockly.Msg.TEXT_CHARAT_TITLE = "텍스트 %1 %2에서";
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "특정 번째 위치에서, 문자를 얻어내 돌려줍니다.";
/** @export */ Blockly.Msg.TEXT_COUNT_HELPURL = "https://github.com/google/blockly/wiki/Text#counting-substrings";
/** @export */ Blockly.Msg.TEXT_COUNT_MESSAGE0 = "count %1 in %2";  // untranslated
/** @export */ Blockly.Msg.TEXT_COUNT_TOOLTIP = "Count how many times some text occurs within some other text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "텍스트에 항목을 추가합니다.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "가입";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "섹션을 추가, 제거하거나 순서를 변경하여 이 텍스트 블럭을 재구성합니다.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "끝에서부터 # 번째 문자까지";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "# 번째 문자까지";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "마지막 문자까지";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "문장";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "에서, 처음부터 얻어냄";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "에서, 마지막에서 # 번째부터 얻어냄";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "에서, 처음부터 # 번째 문자부터 얻어냄";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "문장 중 일부를 얻어내 돌려줍니다.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "에서 다음 문장이 처음으로 나타난 위치 찾기 :";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "에서 다음 문장이 마지막으로 나타난 위치 찾기 :";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TITLE = "문장 %1 %2 %3";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "두 번째 텍스트에서 첫 번째 텍스트가 처음 또는 마지막으로 발생한 색인 위치를 반환합니다. 텍스트가 없으면 %1을 반환합니다.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1이 비어 있습니다";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "입력된 문장이, 빈 문장(\"\")이면 참(true) 값을 돌려줍니다.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "텍스트 만들기";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "여러 개의 아이템들을 연결해(묶어), 새로운 문장을 만듭니다.";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "다음 문장의 문자 개수 %1";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "입력된 문장의, 문자 개수를 돌려줍니다.(공백문자 포함)";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "다음 내용 출력 %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "원하는 문장, 수, 값 등을 출력합니다.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "수에 대해 사용자의 입력을 받습니다.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "문장에 대해 사용자의 입력을 받습니다.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "메시지를 활용해 수 입력";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "메시지를 활용해 문장 입력";
/** @export */ Blockly.Msg.TEXT_REPLACE_HELPURL = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
/** @export */ Blockly.Msg.TEXT_REPLACE_MESSAGE0 = "replace %1 with %2 in %3";  // untranslated
/** @export */ Blockly.Msg.TEXT_REPLACE_TOOLTIP = "Replace all occurances of some text within some other text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Text#reversing-text";
/** @export */ Blockly.Msg.TEXT_REVERSE_MESSAGE0 = "reverse %1";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_TOOLTIP = "Reverses the order of the characters in the text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "https://ko.wikipedia.org/wiki/문자열";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "문자, 단어, 문장.";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "양쪽의 공백 문자 제거";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "왼쪽의 공백 문자 제거";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "오른쪽의 공백 문자 제거";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "문장의 왼쪽/오른쪽/양쪽에서 스페이스 문자를 제거해 돌려줍니다.";
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_APPENDTEXT = "delayMicroseconds";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_HELPURL = "http://arduino.cc/en/Reference/DelayMicroseconds";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_TOOLTIP = "Pauses the program for the amount of time (in microseconds) specified as parameter.";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_APPENDTEXT = "delay";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_HELPURL = "http://arduino.cc/en/Reference/delay";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_TOOLTIP = "Delay specific time";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_APPENDTEXT = "micros";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_HELPURL = "hhttp://arduino.cc/en/Reference/Micros";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_TOOLTIP = "Returns the number of microseconds since the Arduino board began running the current program.";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_APPENDTEXT = "millis";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_HELPURL = "hhttp://arduino.cc/en/Reference/Millis";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_TOOLTIP = "Returns the number of milliseconds since the Arduino board began running the current program.";  // untranslated
/** @export */ Blockly.Msg.TODAY = "오늘";
/** @export */ Blockly.Msg.ULTRASONIC_DISTANCE_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_DISTANCE_TITLE = "Distance";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_TITLE = "MaxRange";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_ECHO = "Echo";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_RESET = "Reset";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TITLE = "Pin#";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TRIG = "Trig";  // untranslated
/** @export */ Blockly.Msg.UNDO = "실행 취소";
/** @export */ Blockly.Msg.URL = "URL";  // untranslated
/** @export */ Blockly.Msg.VALUE = "Value";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "항목";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "'집합 %1' 생성";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://ko.wikipedia.org/wiki/%EB%B3%80%EC%88%98_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)";
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "변수에 저장 되어있는 값을 돌려줍니다.";
/** @export */ Blockly.Msg.VARIABLES_SET = "%1를 %2로 설정";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "'%1 값 읽기' 블럭 생성";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://ko.wikipedia.org/wiki/%EB%B3%80%EC%88%98_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99)";
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "변수의 값을 입력한 값으로 변경해 줍니다.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "'%1' 변수는 이미 존재합니다.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = "'%1' 변수는 '%2' 유형의 다른 변수에 대해 이미 존재합니다.";
/** @export */ Blockly.Msg.YELLOW = "Yellow";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

/** @export */ Blockly.Msg.MATH_HUE = "230";
/** @export */ Blockly.Msg.VARIABLES_HUE = "330";
/** @export */ Blockly.Msg.SERVO_HUE = "215";
/** @export */ Blockly.Msg.GROVE_HUE = "215";
/** @export */ Blockly.Msg.RGBLED_HUE = "215";
/** @export */ Blockly.Msg.MPR121_HUE = "215";
/** @export */ Blockly.Msg.INITIALIZES_HUE = "230";
/** @export */ Blockly.Msg.BLYNK_HUE = "215";
/** @export */ Blockly.Msg.M2X_HUE = "215";
/** @export */ Blockly.Msg.IFTTT_HUE = "215";
/** @export */ Blockly.Msg.INTERRUPTS_HUE = "190";
/** @export */ Blockly.Msg.NEOPIXEL_HUE = "215";
/** @export */ Blockly.Msg.LOOPS_HUE = "120";
/** @export */ Blockly.Msg.SERIAL_HUE = "200";
/** @export */ Blockly.Msg.ROBOT_HUE = "215";
/** @export */ Blockly.Msg.ULTRASONIC_HUE = "215";
/** @export */ Blockly.Msg.TEXTS_HUE = "160";
/** @export */ Blockly.Msg.GROVE_OUTPUT_HUE = "215";
/** @export */ Blockly.Msg.PROCEDURES_HUE = "290";
/** @export */ Blockly.Msg.COLOUR_HUE = "20";
/** @export */ Blockly.Msg.OTHERS_HUE = "215";
/** @export */ Blockly.Msg.TIMES_HUE = "90";
/** @export */ Blockly.Msg.LISTS_HUE = "260";
/** @export */ Blockly.Msg.LOGIC_HUE = "210";
/** @export */ Blockly.Msg.I2C_MATRIX_HUE = "215";
/** @export */ Blockly.Msg.AEROBOT_HUE = "215";
/** @export */ Blockly.Msg.SHIELD_BOT_HUE = "215";
/** @export */ Blockly.Msg.ADAFRUIT_HUE = "215";
/** @export */ Blockly.Msg.I2C_SEVENSEG_HUE = "215";
/** @export */ Blockly.Msg.GROVE_INPUT_HUE = "215";
/** @export */ Blockly.Msg.ETHERNET_HUE = "215";
/** @export */ Blockly.Msg.INOUT_HUE = "230";
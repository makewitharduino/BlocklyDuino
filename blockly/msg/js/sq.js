// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.sq');

goog.require('Blockly.Msg');

/** @export */ Blockly.Msg.ADD_COMMENT = "Vendos nje Koment";
/** @export */ Blockly.Msg.AEROBOT_BACKWARD = "Backward";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_CENTER = "Center";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_DISTSENS_TITLE = "DistSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_DISTSENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_FORWARD = "Forward";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_HELPURL = "http://affordableeducationrobot.github.io/v1.0/";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LIGHTSENS_TITLE = "LightSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LIGHTSENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LINESENS_TITLE = "LineSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LINESENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_MOVE_TITLE = "Move";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_MOVE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_NONE = "None";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_TITLE = "Rotate";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_SETLED_TITLE = "SetLedColor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_SETLED_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_STOP = "Stop";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_TURN_LEFT = "TurnLeft";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_TURN_RIGHT = "TurnRight";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_WARNING = "Need to install AERobot library";  // untranslated
/** @export */ Blockly.Msg.BLUE = "Blue";  // untranslated
/** @export */ Blockly.Msg.BLYNK_AUTH = "Auth";  // untranslated
/** @export */ Blockly.Msg.BLYNK_CONNECT_TITLE = "Connectted";  // untranslated
/** @export */ Blockly.Msg.BLYNK_CONNECT_TOOLTIP = "Check connection";  // untranslated
/** @export */ Blockly.Msg.BLYNK_EMAIL_TITLE = "Send Email";  // untranslated
/** @export */ Blockly.Msg.BLYNK_EMAIL_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_ETHERNET_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.BLYNK_ETHERNET_BEGIN_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_HELPURL = "https://github.com/blynkkk/blynk-library";  // untranslated
/** @export */ Blockly.Msg.BLYNK_MERGE_PARAM_TITLE = "Get Merge Parameter";  // untranslated
/** @export */ Blockly.Msg.BLYNK_MERGE_PARAM_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_NOTIFY_TITLE = "Push Notify";  // untranslated
/** @export */ Blockly.Msg.BLYNK_NOTIFY_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_PARAM_TITLE = "Get Parameter";  // untranslated
/** @export */ Blockly.Msg.BLYNK_PARAM_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_TWEET_TITLE = "Tweet";  // untranslated
/** @export */ Blockly.Msg.BLYNK_TWEET_TOOPTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_VIRTUAL_WRITE_TITLE = "Send Virtual Value";  // untranslated
/** @export */ Blockly.Msg.BLYNK_VIRTUAL_WRITE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_WRITE_TITLE = "Get Virtual Action";  // untranslated
/** @export */ Blockly.Msg.BLYNK_WRITE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
/** @export */ Blockly.Msg.CHANGE = "Change";  // untranslated
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "Ndrysho Vlerat:";
/** @export */ Blockly.Msg.CLEAN_UP = "Pastro blloqet";
/** @export */ Blockly.Msg.COL = "Col";  // untranslated
/** @export */ Blockly.Msg.COLLAPSE_ALL = "Mbyll blloqet";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "Mbyll bllokun";
/** @export */ Blockly.Msg.COLOR = "Color";  // untranslated
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "Ngjyra 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "Ngjyra 2";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "Perpjesetim";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "Përzierje";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Perzien dy ngjyra së bashku me një raport të dhënë (0.0 - 1.0).";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "http://en.wikipedia.org/wiki/Color";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Zgjidh nje ngjyre nga nje game ngjyrash.";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "ngjyre e rastesishme";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Zgjidhni një ngjyrë në mënyrë të rastësishme.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "blu";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "jeshile";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "e kuqe";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "ngjyre me";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "Krijo një ngjyrë me shumën e specifikuar te te kuqes, te gjelbëres, dhe bluse. Te gjitha vlerat duhet te jene mes 0 dhe 100.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "dil nga nje faze perseritese";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "vazhdo me elementin tjeter te nje faze perseritese";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Ndahu nga unaza.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Kapërce pjesën e mbetur të unazës, dhe vazhdo me ripërsëritjen tjetër.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Paralajmërim: Ky bllok mund të përdoret vetëm brenda unazës.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "per cdo produkt %1 ne liste %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Per cdo produkt ne nje \"liste\" \"vendos\" ndryshoren '%1' produktit, dhe pastaj bej disa deklarata.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "numero me %1 nga %2 ne %3 me nga %4";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Bëje identifikuesin \"%1\" që ta ketë vlerat prej numrit të fillimit deri tek numri i fundit, duke numëruar nga intervali i specifikuar, dhe ti bëj blloqet e specifikuara.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "\"Vendos\" \"kushtein\"tek \"pjesa\" \"if\"";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Shto një përfundues, që i mbërrin të gjitha kushtet në bllokun nëse.";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Shto, fshij, ose rirregullo sektoret për ta rikonfiguruar këte bllok nëse.";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "përndryshe";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "përndryshe nëse";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "nëse";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Nëse një vlerë është e saktë, atëherë ekzekuto disa fjali.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Nëse një vlerë është e saktë, atëherë ekzekuto bllokun e parë të fjalive. Përndryshe, ekzekuto bllokun e dytë të fjalive.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Nëse vlera e parë është e saktë, atëherë ekzekuto bllokun e parë të fjalive. Përndryshe, nëse vlera e dytë është e saktë, ekzekuto bllokun e dytë të fjalive.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Nëse vlera e parë është e saktë, atëherë ekzekuto bllokun e parë të fjalive. Përndryshe, nëse vlera e dytë është e saktë, ekzekuto bllokun e dytë të fjalive. Nëse asnjëra nga vlerat nuk është e saktë, ekzekuto bllokun e fundit të fjalive.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://en.wikipedia.org/wiki/For_loop";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "ekzekuto";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "përsërit %1 herë";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ekzekuto disa fjali disa herë.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "përsërit derisa";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "përsërit përderisa";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Përderisa një vlerë është e pasaktë, atëherë ekzekuto disa fjali.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Përderisa një vlerë është e saktë, atëherë ekzekuto disa fjali.";
/** @export */ Blockly.Msg.DATA_LENGTH = "Data Length";  // untranslated
/** @export */ Blockly.Msg.DATA_TYPE = "DataType";  // untranslated
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "Fshijë të gjitha %1 të blloqeve?";
/** @export */ Blockly.Msg.DELETE_BLOCK = "Fshij bllokun";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "Fshi variablën '%1'";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "Fshi përdorimin %1 të variablës '%2'?";
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "Fshij %1 blloqe";
/** @export */ Blockly.Msg.DEVICE_ID = "DeviceID";  // untranslated
/** @export */ Blockly.Msg.DHT_HELPURL = "https://github.com/adafruit/DHT-sensor-library";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_C = "Temperature C";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_F = "Temperature F";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_H = "Humidity %";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_SENSOR = "Sensor";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_TOOLTIP = "The DHT sensors are made of two parts; a capacitive humidity sensor and a thermistor.";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_TYPE = "Content";  // untranslated
/** @export */ Blockly.Msg.DHT_WARNING = "Need to install the (adafruit) DHT-sensor-library";  // untranslated
/** @export */ Blockly.Msg.DIRECTION = "Direction";  // untranslated
/** @export */ Blockly.Msg.DISABLE_BLOCK = "Çaktivizo bllokun";
/** @export */ Blockly.Msg.DOUBLE = "Double";  // untranslated
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "Kopjo";
/** @export */ Blockly.Msg.ELEVATION = "Elevation";  // untranslated
/** @export */ Blockly.Msg.EMAIL_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.EMAIL_BODY = "Body";  // untranslated
/** @export */ Blockly.Msg.EMAIL_TITLE = "Title";  // untranslated
/** @export */ Blockly.Msg.ENABLE_BLOCK = "Aktivizo bllokun";
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_HELPURL = "https://www.arduino.cc/en/Reference/ClientAvailable";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_TITLE = "Clinet.availalbe";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_TOOLTIP = "Returns the number of bytes available for reading (that is; the amount of data that has been written to the client by the server it is connected to).";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_DHCP_TITLE = "Begin (DHCP)";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_DHCP_TOOLTIP = "Using Ethernet.begin(mac) with the proper network setup; the Ethernet shield will automatically obtain an IP address.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_HELPURL = "https://www.arduino.cc/en/Reference/EthernetBegin";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_HELPURL = "https://www.arduino.cc/en/Reference/ClientPrintln";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_TITLE = "Client.Println";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_TOOLTIP = "Print data; followed by a carriage return and newline; to the server a client is connected to. Prints numbers as a sequence of digits; each an ASCII character (e.g. the number 123 is sent as the three characters '1'; '2'; '3').";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_HELPURL = "https://www.arduino.cc/en/Reference/ClientPrint";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_TITLE = "Client.Print";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_TOOLTIP = "Print data to the server that a client is connected to. Prints numbers as a sequence of digits; each an ASCII character (e.g. the number 123 is sent as the three characters '1'; '2'; '3').";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_HELPURL = "https://www.arduino.cc/en/Reference/ClientConnected";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_TITLE = "Clinet.Connected";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_TOOLTIP = "Returns true if the client is connected; false if not.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_HELPURL = "https://www.arduino.cc/en/Reference/ClientConnect";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_TITLE = "Clinet.Connect";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_TOOLTIP = "Connects to a specified IP address and port. The return value indicates success or failure. Also supports DNS lookups when using a domain name.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_TITLE = "GET Request";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_TOOLTIP = "Create GET Request.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_HELPURL = "https://www.arduino.cc/en/Reference/EthernetLocalIP";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_TITLE = "localIP";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_TOOLTIP = "Retruns the IP address of the Ethernet shield";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_MAC_ADDRESS_TOOLTIP = "Edit Mac Address";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_DATA = "Data";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_TITLE = "POST Request";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_TOOLTIP = "Create POST Request.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_HELPURL = "https://www.arduino.cc/en/Reference/ClientRead";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_TITLE = "Client.Read";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_TOOLTIP = "Read the next byte received from the server the client is connected to (after the last call to read()).";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_HELPURL = "https://www.arduino.cc/en/Reference/ClientStop";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_TITLE = "Client.Stop";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_TOOLTIP = "Disconnect from the server.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_1 = "Eternet";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_2 = "Eternet2";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_V2 = "Eternet_v2";  // untranslated
/** @export */ Blockly.Msg.EXPAND_ALL = "Zmadho blloqet";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "Zmadho bllokun";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "Hyrjet e jashtme";
/** @export */ Blockly.Msg.FALLING = "Falling";  // untranslated
/** @export */ Blockly.Msg.GREEN = "Green";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Button";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_TITLE = "Button";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_TOOLTIP = "Basic digital input";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Buzzer";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_TITLE = "Piezo Buzzer";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_TOOLTIP = "Emit a tone when the output is high";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Infrared_Emitter";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_SEND_TITLE = "Send";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_SEND_TOOLTIP = "Send Data.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_TITLE = "Infrared Emitter";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_WARNING = "Need to install the (Grove) IRSendRev Library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_CHECK_DATA_TITLE = "Check Data";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_CHECK_DATA_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_DATA_TITLE = "Received Data";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_DATA_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Infrared_Receiver";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_TOOLTIP = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_WARNING = "Need to install the (Grove) IRSendRev Library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_RECEIVE_TITLE = "Receive";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_RECEIVE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_TITLE = "Infrared Receiver";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_TITLE = "LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_TOOLTIP = "LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Light_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_TITLE = "Light Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_TOOLTIP = "output Low Value in bright light. High Value is darkness.";  // untranslated
/** @export */ Blockly.Msg.GROVE_PIN = "PIN#";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Relay";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_TITLE = "Relay";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_TOOLTIP = "capable of switching a much higher voltages and currents. The maximum voltage and current that can be controlled by this module upto 250V at 10 amps.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_AUTOSCROLL_TITLE = "AutoScroll";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_AUTOSCROLL_TOOLTIP = "Turns on automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_TOOLTIP = "Initializes the interface to the LCD screen; and specifies the dimensions (width and height) of the display.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_WARNING = "Need to install the Grove_LCD_RGB_Backlight library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_CLEAR_TITLE = "Clear";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_CLEAR_TOOLTIP = "Clears the LCD screen and positions the cursor in the upper-left corner.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_LCD_RGB_Backlight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_INIT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalConstructor";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_LEFTTORIGHT_TITLE = "LeftToRight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_LEFTTORIGHT_TOOLTIP = "Set the direction for text written to the LCD to left-to-right; the default.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_NOAUTOSCROLL_TITLE = "NoAutoScroll";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_NOAUTOSCROLL_TOOLTIP = "Turns off automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_PRINT_TITLE = "Print";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_PRINT_TOOLTIP = "Prints text to the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_RIGHTTOLEFT_TITLE = "RightToLeft";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_RIGHTTOLEFT_TOOLTIP = "Set the direction for text written to the LCD to right-to-left (the default is left-to-right). ";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_LEFT_TITLE = "ScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_LEFT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the left.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_RIGHT_TITLE = "ScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_RIGHT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the right.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SETCURSOR_TITLE = "setCursor";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_TITLE = "LCD RGB";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Rotary_Angle_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_TITLE = "Rotary Angle";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_TOOLTIP = "Analog output between 0 and Vcc";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Sound_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_TITLE = "Sound Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_TOOLTIP = "Detect the sound strength of the environment";  // untranslated
/** @export */ Blockly.Msg.GROVE_STAT = "Stat";  // untranslated
/** @export */ Blockly.Msg.GROVE_TEMP_SENSOR_TITLE = "Temporature Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_TEMP_SENSOR_TOOLTIP = "return number of ambient temperature in ℃";  // untranslated
/** @export */ Blockly.Msg.GROVE_TILT_SWITCH_TITLE = "Tilt Switch";  // untranslated
/** @export */ Blockly.Msg.GROVE_TILT_SWITCH_TOOLTIP = "When the switch is level it is open; and when tilted; the switch closes.";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Touch_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_TITLE = "Touch";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_TOOLTIP = "Basic digital input";  // untranslated
/** @export */ Blockly.Msg.HELP = "Ndihmë";
/** @export */ Blockly.Msg.I2C_MATRIX_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_BEGIN_WARNING = "Need to install the Adafruit-LED-Backpack-Library and the Adafruit-GFX-Library.";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_CLEAR = "Clear";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DIAMETER = "Diamater";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DOTS = "Dots";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWCIRCLE = "DrawCircle";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWCOLON = "drawColon";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWLINE = "DrawLine";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWPIXEL = "DrawPixel";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWRECT = "DrawRect";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_FILLRECT = "FillRect";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_HELPURL = "https://github.com/adafruit/Adafruit-LED-Backpack-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_LED_OFF = "Led off";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_LED_ON = "Led on";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_NUM = "Num";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_PRINT = "Print";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETCURSOR = "Cursor";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETROTATION = "Rotation";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTCOLOR = "TextColor";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTSIZE = "TextSize";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTWRAP = "TextWrap";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_TEXT = "text";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_TYPE = "Type";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WRITEDIGITNUM = "writeDigitNum";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WRITEDISPLAY = "WriteDisplay";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X = "x";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X0 = "x0";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X1 = "x1";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y = "y";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y0 = "y0";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y1 = "y1";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BEGIN_WARNING = "Need to install the Adafruit-LED-Backpack-Library and the Adafruit-GFX-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BOOLEAN_FALSE = "hidden";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BOOLEAN_TRUE = "display";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_COLON = "Colon";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_DOTS = "Colon";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_HELPURL = "https://github.com/adafruit/Adafruit-LED-Backpack-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_NUM = "Number";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_PRINT = "Print";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_TITLE = "7 Segment";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WARNING = "Need to Begin blocks";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WRITEDIGITNUM = "WriteDigitNum";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WRITEDISPLAY = "WriteDisplay";  // untranslated
/** @export */ Blockly.Msg.IFTTT_EVENT = "Event";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_TITLE = "Create GET Request URL";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_TOOLTIP = "Create GET Request URL of IFTTT.";  // untranslated
/** @export */ Blockly.Msg.IFTTT_KEY = "Key";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE1 = "Value1";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE2 = "Value2";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE3 = "Value3";  // untranslated
/** @export */ Blockly.Msg.INDEX = "Index";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_APPENDTEXT = "add setup()";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_HELPURL = "http://www.arduino.cc/en/Reference/Setup";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_TOOLTIP = "The setup() function is called when a sketch starts.";  // untranslated
/** @export */ Blockly.Msg.INLINE_INPUTS = "Hyrjet e brendshme";
/** @export */ Blockly.Msg.INOUT_ANALOGPIN_TEXT = "Analog Pin";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_APPENDTEXT = "AnalogRead PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_HELPURL = "http://arduino.cc/en/Reference/AnalogRead";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_TOOLTIP = "Return value between 0 and 1024.";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_APPENDTEXT_PIN = "AnalogWrite PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_APPENDTEXT_VALUE = "value";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_HELPURL = "http://arduino.cc/en/Reference/AnalogWrite";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_TOOLTIP = "Write analog value between 0 and 255 to a specific Port.";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITALPIN_TEXT = "Digital Pin";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_APPENDTEXT_PIN = "DigitalRead PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_APPENDTEXT_PULLUP = "pullup";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_HELPURL = "http://arduino.cc/en/Reference/DigitalRead";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_APPENDTEXT_PIN = "DigitalWrite PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_APPENDTEXT_STAT = "Stat";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_HELPURL = "http://arduino.cc/en/Reference/DigitalWrite";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_TOOLTIP = "Write digital value to a specific Port.";  // untranslated
/** @export */ Blockly.Msg.INOUT_HIGH = "HIGH";  // untranslated
/** @export */ Blockly.Msg.INOUT_LOW = "LOW";  // untranslated
/** @export */ Blockly.Msg.INOUT_OFF = "OFF";  // untranslated
/** @export */ Blockly.Msg.INOUT_ON = "ON";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_PIN = "Pulsein Pin#";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_TIMEOUT = "Timeout";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_TYPE = "Type";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_HELPURL = "http://arduino.cc/en/Reference/pulseIn";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_TOOLTIP = "Reads a pulse (either HIGH or LOW) on a pin.";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_DURATION = "duration";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_FREQ = "frequency";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_PIN = "tone Pin#";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_HELPURL = "http://arduino.cc/en/reference/tone";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_TOOLTIP = "The pin can be connected to a piezo buzzer or other speaker to play tones.";  // untranslated
/** @export */ Blockly.Msg.INTEGER = "Integer";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_HELPURL = "https://www.arduino.cc/en/Reference/AttachInterrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_TITLE = "Attach Interrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_TOOLTIP = "The first parameter to attachInterrupt is an interrupt number.";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_HELPURL = "https://www.arduino.cc/en/Reference/DetachInterrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_TITLE = "Detach Interrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_TOOLTIP = "Turns off the given interrupt.";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_HELPURL = "https://www.arduino.cc/en/Reference/Interrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_HELPURL = "https://www.arduino.cc/en/Reference/NoInterrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_TITLE = "noInterrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_TOOLTIP = "Disables interrupts (you can re-enable them with interrupts()).";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_TITLE = "interrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_TOOLTIP = "Re-enables interrupts (after they've been disabled by noInterrupts()). ";  // untranslated
/** @export */ Blockly.Msg.IOS_CANCEL = "Cancel";  // untranslated
/** @export */ Blockly.Msg.IOS_ERROR = "Error";  // untranslated
/** @export */ Blockly.Msg.IOS_OK = "OK";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_ADD_INPUT = "+ Add Input";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS = "Allow statements";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR = "This function has duplicate inputs.";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_INPUTS = "INPUTS";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_BUTTON = "Add";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE = "+ Add Variable";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON = "Delete";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR = "You can't use an empty variable name.";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON = "Rename";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME = "Variable name";  // untranslated
/** @export */ Blockly.Msg.IP_ADDRESS = "IP Address";  // untranslated
/** @export */ Blockly.Msg.LATITUDE = "Latitude";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalAutoscroll";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_TITLE = "AutoScroll";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_TOOLTIP = "Turns on automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalBegin";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_TITLE = "begin";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_TOOLTIP = "Initializes the interface to the LCD screen; and specifies the dimensions (width and height) of the display.";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalClear";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_TITLE = "Clear";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_TOOLTIP = "Clears the LCD screen and positions the cursor in the upper-left corner.";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D4 = "D4";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D5 = "D5";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D6 = "D6";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D7 = "D7";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_ENABLE = "enable";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalConstructor";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_RS = "rs";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_RW = "rw";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_TITLE = "Pin#";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_TOOLTIP = "Creates a variable of type LiquidCrystal.";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalLeftToRight";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_TITLE = "LeftToRight";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_TOOLTIP = "Set the direction for text written to the LCD to left-to-right; the default.";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalNoAutoscroll";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_TITLE = "NoAutoScroll";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_TOOLTIP = "Turns off automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalPrint";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_TITLE = "Print";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_TOOLTIP = "Prints text to the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalRightToLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_TITLE = "RightToLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_TOOLTIP = "Set the direction for text written to the LCD to right-to-left (the default is left-to-right). ";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_TITLE = "ScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the left.";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_TITLE = "ScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the right.";  // untranslated
/** @export */ Blockly.Msg.LCD_SETCURSOR_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalSetCursor";  // untranslated
/** @export */ Blockly.Msg.LCD_SETCURSOR_TITLE = "setCursor";  // untranslated
/** @export */ Blockly.Msg.LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "krijo një listë të zbrazët";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Kthen një listë, te gjatësisë 0, duke mos përmbajtur asnjë regjistrim të të dhënave";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "listë";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Shto, fshij, ose rirregullo sektoret për ta rikonfiguruar këtë bllok të listës.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "krijo listë me";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Shto një send në listë.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Krijo një listë me ndonjë numbër të sendeve.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "i parë";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# nga fundi";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "merr";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "merr dhe fshij";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "i fundit";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "i rastësishëm";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "largo";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Rikthen tek artikulli i par në list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "Kthen një send në pozicionin e specifikuar në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Kthen artikullin e fundit në list.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Kthen një send të rastësishëm në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Fshin dhe kthen sendin e parë në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "Fshin dhe kthen sendin në pozicionin e specifikuar në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Fshin dhe kthen sendin e fundit në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Fshin dhe kthen një send të rastësishëm në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Fshin sendin e parë në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "Fshin sendin në pozicionin e specifikuar në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Fshin sendin e fundit në listë.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Kthen një send të rastësishëm në listë.";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "tek # nga fundi";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "tek #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "tek i fundit";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "merr nën-listën nga i pari";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "merr nën listën nga # nga fundi";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "merr nën-listën nga #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Krijon në kopje të pjesës së specifikuar të listës.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 është sendi i fundit.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 është sendi i parë.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "gjen ndodhjen e parë të sendit";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "gjen ndodhjen e fundit të sendit";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Kthen indeksin e ndodhjes së parë/fudit të sendit në listë. Kthen %1 nëse teksti nuk është gjetur.";
/** @export */ Blockly.Msg.LISTS_INLIST = "në listë";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 është e zbraztë";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Kthehet i saktë nëse lista është e zbraztë.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "gjatësia e %1";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Kthen gjatësinë e listës.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "krijo listën me sendin %1 të përsëritur %2 herë";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Krijon në listë qe përmban vlerën e dhënë të përsëritur aq herë sa numri i specifikuar.";
/** @export */ Blockly.Msg.LISTS_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_MESSAGE0 = "reverse %1";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_TOOLTIP = "Reverse a copy of a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "sikurse";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "fut në";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "vendos";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Fut sendin në fillim të listës.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "Fut sendin në pozicionin e specifikuar të listës.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Bashkangjit sendin në fund të listës.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Fut sendin rastësisht në listë.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Vendos sendin e parë në listë.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "Vendos sendin në pozicionin e specifikuar në listë.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Vendos sendin e fundit në listë.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Vendos një send të rastësishëm në listë.";
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ngjitje";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "zbritje";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "rendit %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "Rendit një kopje të listës.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alfabetike, injoro madhësinë e shkronjave";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numerike";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alfabetike";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "bëj listë nga teksti";
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "bëj tekst nga lista";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text; separated by a delimiter.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts; breaking at each delimiter.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "e pasaktë";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Kthehet ose të saktë ose të pasaktë.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "e saktë";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "http://en.wikipedia.org/wiki/Inequality_(mathematics)";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Ktheje të saktë nëse të dy hyrjet janë të barabarta me njëra-tjetrën.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Ktheje të saktë nëse hyrja e parë është më e madhe se hyrja e dytë.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Ktheje të saktë nëse hyrja e parë është më e madhe ose e barabartë me hyrjen e dytë.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Ktheje të saktë nëse hyrja e parë është më e vogël se hyrja e dytë.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Ktheje të saktë nëse hyrja e parë është më e vogël ose e barabartë me hyrjen e dytë.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Ktheje të saktë nëse të dy hyrjet nuk janë të barabarta me njëra-tjetrën.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "jo %1";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Kthehet e saktë nëse hyrja është e pasaktë. Kthehet e pasaktë nëse hyrja është e saktë.";
/** @export */ Blockly.Msg.LOGIC_NULL = "pavlerë";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "http://en.wikipedia.org/wiki/Nullable_type";
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "Kthehet e pavlerë.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "dhe";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "ose";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Kthehet të saktë nëse të dy hyrjet janë të sakta.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Kthehet e saktë nëse së paku njëra nga hyrjet është e saktë.";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "http://en.wikipedia.org/wiki/%3F:";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "nëse e pasaktë";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "nëse e saktë";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Kontrollo kushtin në 'test'. Nëse kushti është i saktë, kthen vlerën 'nëse e saktë'; përndryshe kthen vlerën 'nëse e pasaktë'.";
/** @export */ Blockly.Msg.LONGITUDE = "Longitude";  // untranslated
/** @export */ Blockly.Msg.LOW = "Low";  // untranslated
/** @export */ Blockly.Msg.M2X_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.M2X_BEGIN_TOOLTIP = "Set Config.";  // untranslated
/** @export */ Blockly.Msg.M2X_CUSTOM_LIST_VALUE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_DATE0_TITLE = "Start";  // untranslated
/** @export */ Blockly.Msg.M2X_DATE1_TITLE = "End";  // untranslated
/** @export */ Blockly.Msg.M2X_DELETE_VALUES_TITLE = "Delete Value";  // untranslated
/** @export */ Blockly.Msg.M2X_DELETE_VALUES_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_HELPURL = "https://m2x.att.com/developer/tutorials/arduino";  // untranslated
/** @export */ Blockly.Msg.M2X_KEY = "Access Key";  // untranslated
/** @export */ Blockly.Msg.M2X_LIST_VALUE_TITLE = "Get DataList";  // untranslated
/** @export */ Blockly.Msg.M2X_LIST_VALUE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_LOCATION_NAME = "Location name";  // untranslated
/** @export */ Blockly.Msg.M2X_READ_LOCATION_TITLE = "Read Location";  // untranslated
/** @export */ Blockly.Msg.M2X_READ_LOCATION_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_STREAM_NAME = "Stream Name";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_LOCATION_TITLE = "Update Location";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_LOCATION_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_VALUE_TITLE = "Update";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_VALUE_TOOLTIP = "Update Data to M2X";  // untranslated
/** @export */ Blockly.Msg.MAC_ADDRESS = "Mac Address";  // untranslated
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "http://sq.wikipedia.org/wiki/Aritmetika";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Kthen shumën e dy numrave.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Kthen herësin e dy numrave.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Kthen ndryshimin e dy numrave.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Kthen produktin e dy numrave.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Kthen numrin e parë të ngritur në fuqinë e numrit të dytë.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "http://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "ndrysho %1 nga %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "Shto një numër në ndryshoren '%1'.";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "http://en.wikipedia.org/wiki/Mathematical_constant";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Kthen një nga konstantet e përbashkëta: : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infiniti).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "detyro %1 e ulët %2 e lartë %3";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Vëni një numër që të jetë në mes të kufive të specifikuara(përfshirëse).";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "është i pjestueshme me";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "është çift";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "është negativ";
/** @export */ Blockly.Msg.MATH_IS_ODD = "është tek";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "është pozitiv";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "është prim";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "Kontrollo nëse një numër është çift, tek, prim, i plotë, pozitiv, negativ, ose nëse është i pjestueshëm me një numër të caktuar. Kthehet e saktë ose e pasaktë.";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "është i plotë";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "http://en.wikipedia.org/wiki/Modulo_operation";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "mbetësi i %1 ÷ %2";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "Kthen mbetësin nga pjestimi i dy numrave.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "x";
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "http://en.wikipedia.org/wiki/Number";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "Një numër.";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "mesatarja e listës";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "numri më i madh i listës";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana e listës";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "numri më i ulët i listës";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modat e listës";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "send i rastësishëm i listës";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "devijimi standard i listës";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "mbledhja e listës";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Kthen mesatarën (kuptimi aritmetik) i vlerave numerike të listës.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Kthe numrin më të madh të listës.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Kthe numrin median të listës.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Kthe numrin me të vogël të listës.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Kthe listën e sendit(eve) më të zakonshme të listës.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Kthe një element të rastësishëm nga lista.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Kthe devijimin standard të listës.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Kthe shumën e të gjithë numrave të listës.";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "http://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraksioni i rastësishëm";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Kthe fraksionin e rastësishëm në mes të 0.0 (përfshirëse) dhe 1.0 (jopërfshirëse).";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "http://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = "numër i plotë i rastësishëm nga %1 deri në %2";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Kthe një numër të plotë të rastësishëm të dy kufijve të specifikuar, të përfshirë.";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "http://en.wikipedia.org/wiki/Rounding";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "rrumbullakësimi";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "rrumbullakësimi i ulët";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "rrumbullakësimi i lartë";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "Rrumbullakësimi i numrit të lartë ose të ulët.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "http://en.wikipedia.org/wiki/Square_root";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolut";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "rrënja katrore";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Kthen vlerën absolute të një numri.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Kthen e në fuqinë e një numri.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Kthen logaritmën natyrale të një numri.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Kthen 10 logaritmet bazë të një numri.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Kthe negacionin e një numri.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Kthen 10 në fuqinë e një numri.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Kthen rrënjën katrore të një numri.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "acosinus";
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "asinus";
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "atangjentë";
/** @export */ Blockly.Msg.MATH_TRIG_COS = "cos";
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "http://en.wikipedia.org/wiki/Trigonometric_functions";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "sin";
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "tan";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Rikthe cos-1 e nje numeri.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Rikthe sin-1 e nje numeri.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Kthe tg-1 e nje numeri.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Kthe kosinusin e nje grade (jo ne radiant).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Kthe kosinusin e nje kendi (jo ne radiant).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Kthe tangentin e nje kendi (jo radiant).";
/** @export */ Blockly.Msg.MODE = "Mode";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_TOOLTIP = "initialize the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_WARNING = "Need to install the Adafruit_MPR121 library.";  // untranslated
/** @export */ Blockly.Msg.MPR121_HELPURL = "https://learn.adafruit.com/adafruit-mpr121-12-key-capacitive-touch-sensor-breakout-tutorial/wiring#download-adafruit-mpr121";  // untranslated
/** @export */ Blockly.Msg.MPR121_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.MPR121_RELEASED_TITLE = "Released";  // untranslated
/** @export */ Blockly.Msg.MPR121_RELEASED_TOOLTIP = "relesed the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_RESET_TITLE = "Reset";  // untranslated
/** @export */ Blockly.Msg.MPR121_RESET_TOOLTIP = "Reset the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_TOUCHED_TITLE = "Touched";  // untranslated
/** @export */ Blockly.Msg.MPR121_TOUCHED_TOOLTIP = "touched the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_VALUE_TITLE = "Capacitance Value";  // untranslated
/** @export */ Blockly.Msg.MPR121_VALUE_TOOLTIP = "value of capacitance";  // untranslated
/** @export */ Blockly.Msg.MPR121_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_BRIGHTNESS = "Brightness";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_NUM = "LED Num";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_SETTING = "Init";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_TOOLTIP = "This initializes the NeoPixel library.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_WARNING = "Need to install the Adafruit_NeoPixel Library.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_B = "B";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_G = "G";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_R = "R";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_TOOLTIP = "pixels.Color takes RGB values; from 0;0;0 up to 255;255;255";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_TOOLTIP = "Set pixels.Color.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SHOW = "Show";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SHOW_TOOLTIP = "This sends the updated pixel color to the hardware.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_WARNING = "Need to Begin Block.";  // untranslated
/** @export */ Blockly.Msg.NEW_VARIABLE = "Krijo variabël...";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "Emri i identifikatorit të ri:";
/** @export */ Blockly.Msg.OFF = "Off";  // untranslated
/** @export */ Blockly.Msg.ON = "On";  // untranslated
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
/** @export */ Blockly.Msg.PIN = "Pin";  // untranslated
/** @export */ Blockly.Msg.PORT = "Port";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "me:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Lësho funksionin e definuar nga përdoruesi '%1'.";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Lëho funksionin e definuar nga përdoruesi '%1' dhe përdor daljen e tij.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "me:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "Krijo '%1'";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "bëj diqka";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "te";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Krijon një funksion pa dalje.";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "http://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "rikthe";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Krijon një funksion me një dalje.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Paralajmërim: Ky funksion ka parametra të dyfishuar.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Thekso definicionin e funksionit";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Nëse një vlerë është e saktë, atëherë kthe një vlerë të dytë.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Paralajmërim: Ky bllok mund të përdoret vetëm brenda definicionit të funksionit.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Fut emrin:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Add an input to the function.";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "Informacioni i futur";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Add; remove; or reorder inputs to this function.";  // untranslated
/** @export */ Blockly.Msg.RED = "Red";  // untranslated
/** @export */ Blockly.Msg.REDO = "Ribëj";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "Fshij komentin";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "Ndrysho emrin variables...";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "Ndrysho emrin e te gjitha '%1' variablave ne :";
/** @export */ Blockly.Msg.RGBLED_BEGIN_BRIGHTNESS = "Brightness";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_NUM = "LED Num";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_SETTING = "Init";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_TOOLTIP = "This initializes the NeoPixel library.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_WARNING = "Need to install the Adafruit_NeoPixel Library.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_B = "B";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_G = "G";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_R = "R";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_TOOLTIP = "pixels.Color takes RGB values; from 0;0;0 up to 255;255;255";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SETPIXELCOLOR_TOOLTIP = "Set pixels.Color.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW = "Show";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW_TOOLTIP = "This sends the updated pixel color to the hardware.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_WARNING = "Need to Begin Block.";  // untranslated
/** @export */ Blockly.Msg.RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.RISING = "Rising";  // untranslated
/** @export */ Blockly.Msg.ROW = "Row";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_APPENDTEXT = "Serial Available";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_HELPURL = "http://www.arduino.cc/en/Serial/available";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_TOOLTIP = "Get the number of bytes (characters) available for reading from the serial port.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER = "Byte Code of Number";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER_TEXT1 = "Byte code of";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_APPENDTEXT = "Serial Println";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_HELPURL = "http://www.arduino.cc/en/Serial/Println";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_TOOLTIP = "Prints data to the serial port as human-readable ASCII text followed by a carriage return character and a newline characte.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_APPENDTEXT = "Serial Print";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_HELPURL = "http://www.arduino.cc/en/Serial/Print";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_TOOLTIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_APPENDTEXT = "Serial Read";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_HELPURL = "http://www.arduino.cc/en/Serial/Read";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_TOOLTIP = "the first byte of incoming serial data available (or -1 if no data is available).";  // untranslated
/** @export */ Blockly.Msg.SERVER = "Server";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_TEXT1 = "Angle";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_US_TEXT1 = "Angle(uS)";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_US_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_HELPURL = "http://www.arduino.cc/en/Reference/ServoAttached";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TEXT1 = "Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TEXT2 = "Attached?";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TOOLTIP = "Check whether the Servo variable is attached to a pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_HELPURL = "http://www.arduino.cc/en/Reference/ServoAttach";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MAX_TEXT1 = "Max";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MAX_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MIN_TEXT1 = "Min";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MIN_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TEXT1 = "Attach Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TOOLTIP = "Attach the Servo variable to a pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_HELPURL = "http://www.arduino.cc/en/Reference/ServoDetach";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TEXT1 = "Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TEXT2 = "Detach";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TOOLTIP = "Detach the Servo variable from its pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_HELPURL = "http://www.arduino.cc/en/Reference/ServoRead";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TEXT1 = "Read Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TEXT2 = "Current Angle";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TOOLTIP = "Read the current angle of the servo (the value passed to the last call to write()).";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_HELPURL = "http://www.arduino.cc/en/Reference/ServoWrite";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TEXT1 = "Write Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TOOLTIP = "Writes a value to the servo; controlling the shaft accordingly.";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_US_HELPURL = "http://www.arduino.cc/en/Reference/ServoWriteMicroseconds";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_US_TOOLTIP = "Writes a value in microSeconds(uS) to the servo; controlling the shaft accordingly.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_BACKWARD = "Backward";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_CONTROL = "Control";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_DRIVE_TITLE = "Drive";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_DRIVE_TOOLTIP = "All purpose drive call. Calls leftMotor and rightMotor directly.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_LEFTTOOLTIP = "Disables the left motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_LEFT_TITLE = "FastStop(left)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_RIGHT_TITLE = "FastStop(right)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_RIGHT_TOOLTIP = "Disables the right motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_TITLE = "FastStop";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_TOOLTIP = "Disables the motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FORWARD = "Forward";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_HELPURL = "http://www.seeedstudio.com/wiki/Shield_Bot_V1.2";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_LEFT_SPEED = "Left";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOTOR = "Motor";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOTOR_TOOLTIP = "Enables the right or left motor; negative for backwards; positive for forwards.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOVE_TITLE = "Move";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOVE_TOOLTIP = "Move Carbot.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_READ_SENSOR_TITLE = "Read Sensor";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_READ_SENSOR_TOOLTIP = "Reads any of the 5 light sensors on board.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_RIGHT_SPEED = "Right";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_LR_TOOLTIP = "Write a max speed to the left and right motor. Between 0(basically off) and 255(full speed)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_TITLE = "MotorSpeed";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_TOOLTIP = "Set max speed of two motors. Between 0(basically off) and 255(full speed)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOP = "Stop";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOPLEFT = "StopLeft";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOPRIGHT = "StopRight";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_WARNING = "Need to install Shield Bot 1.2 library";  // untranslated
/** @export */ Blockly.Msg.STRING = "String";  // untranslated
/** @export */ Blockly.Msg.TEXT = "Text";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_TITLE = "ne %1 shto tekst %2";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "shto tekst tek varibla '%1'.";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "me shkronja te vogla shtypi";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Fillimi me shkronje te madhe shtypi";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "me shkronja te medha shtypi";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Kthe nje kopje te tekstit ne nje rast te ndryshem.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "merr shkronjen e pare";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "merr shkronjen # nga fundi";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "merr shkronjen #";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "merr shkronjen e fundit";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "merr nje shkronje te rastesishme";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TITLE = "in text %1 %2";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Kthe nje shkronje nga nje pozicion i caktuar.";
/** @export */ Blockly.Msg.TEXT_COUNT_HELPURL = "https://github.com/google/blockly/wiki/Text#counting-substrings";
/** @export */ Blockly.Msg.TEXT_COUNT_MESSAGE0 = "numro %1 në %2";
/** @export */ Blockly.Msg.TEXT_COUNT_TOOLTIP = "Count how many times some text occurs within some other text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Shto nje gje ne tekst";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "bashkangjit";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Shto, fshij, ose rirregullo sektoret për ta rikonfiguruar këtë bllok teksti.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "ne shkronjen # nga fundi";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "ne shkronjen #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "tek shkronja e fundit";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "ne tekst";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "merr vlerat qe vazhdojne me shkronjen e pare";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "merr nenvargun nga shkronja # nga fundi";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "Merr nenvargun nga shkronja #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Pergjigjet me nje pjese te caktuar teksti.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "gjej rastisjen e pare te tekstit";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "gjej rastisjen e fundit te tekstit";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TITLE = "ne tekst %1 %2 %3";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Pergjigjet me indeksin e pare/fundit te rastisjes se tekstit te pare ne tekstin e dyte. Pergjigjet me %1 ne qofte se teksti nuk u gjet.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 eshte bosh";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Kthehet e vertete neqoftese teksti i dhene eshte bosh.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "krijo tekst me";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "Krijo nje pjese te tekstit duke bashkuar se bashku disa sende";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "gjatesi %1";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Pergjigjet me nje numer shkronjash (duke perfshire hapesire) ne tekstin e dhene.";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "printo %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "Printo tekstin e caktuar, numer ose vlere tjeter.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Kerkoji perdoruesit nje numer.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Kerkoji perdoruesit ca tekst.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "kerko nje numer me njoftim";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "kerko tekst me njoftim";
/** @export */ Blockly.Msg.TEXT_REPLACE_HELPURL = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
/** @export */ Blockly.Msg.TEXT_REPLACE_MESSAGE0 = "replace %1 with %2 in %3";  // untranslated
/** @export */ Blockly.Msg.TEXT_REPLACE_TOOLTIP = "Replace all occurances of some text within some other text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_MESSAGE0 = "reverse %1";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_TOOLTIP = "Reverses the order of the characters in the text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "http://en.wikipedia.org/wiki/String_(computer_science)";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "Nje shkronje, fjale, ose rresht teksti.";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "prit hapesirat nga te dyja anet";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "prit hapesirat nga ana e majte";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "prit hapesirat nga ana e djathte";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "Pergjigju me nje kopje te tekstit me hapesira te fshira nga njera ane ose te dyja anet.";
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_APPENDTEXT = "delayMicroseconds";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_HELPURL = "http://arduino.cc/en/Reference/DelayMicroseconds";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_TOOLTIP = "Pauses the program for the amount of time (in microseconds) specified as parameter.";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_APPENDTEXT = "delay";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_HELPURL = "http://arduino.cc/en/Reference/delay";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_TOOLTIP = "Delay specific time";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_APPENDTEXT = "micros";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_HELPURL = "hhttp://arduino.cc/en/Reference/Micros";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_TOOLTIP = "Returns the number of microseconds since the Arduino board began running the current program.";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_APPENDTEXT = "millis";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_HELPURL = "hhttp://arduino.cc/en/Reference/Millis";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_TOOLTIP = "Returns the number of milliseconds since the Arduino board began running the current program.";  // untranslated
/** @export */ Blockly.Msg.TODAY = "Sot";
/** @export */ Blockly.Msg.ULTRASONIC_DISTANCE_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_DISTANCE_TITLE = "Distance";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_TITLE = "MaxRange";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_ECHO = "Echo";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_RESET = "Reset";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TITLE = "Pin#";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TRIG = "Trig";  // untranslated
/** @export */ Blockly.Msg.UNDO = "Zhbëj";
/** @export */ Blockly.Msg.URL = "URL";  // untranslated
/** @export */ Blockly.Msg.VALUE = "Value";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "send";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "Krijo 'vendos %1";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "Pergjigjet me nje vlere te kesaj variable.";
/** @export */ Blockly.Msg.VARIABLES_SET = "vendos %1 ne %2";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "Krijo 'merr %1";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "Vendos kete variable te jete e barabarte me te dhenat ne hyrje.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "Një variabël e quajtur '%1' tashmë ekziston.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = "A variable named '%1' already exists for another variable of type '%2'.";  // untranslated
/** @export */ Blockly.Msg.YELLOW = "Yellow";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

/** @export */ Blockly.Msg.MATH_HUE = "230";
/** @export */ Blockly.Msg.VARIABLES_HUE = "330";
/** @export */ Blockly.Msg.SERVO_HUE = "215";
/** @export */ Blockly.Msg.GROVE_HUE = "215";
/** @export */ Blockly.Msg.RGBLED_HUE = "215";
/** @export */ Blockly.Msg.MPR121_HUE = "215";
/** @export */ Blockly.Msg.INITIALIZES_HUE = "230";
/** @export */ Blockly.Msg.BLYNK_HUE = "215";
/** @export */ Blockly.Msg.M2X_HUE = "215";
/** @export */ Blockly.Msg.IFTTT_HUE = "215";
/** @export */ Blockly.Msg.INTERRUPTS_HUE = "190";
/** @export */ Blockly.Msg.NEOPIXEL_HUE = "215";
/** @export */ Blockly.Msg.LOOPS_HUE = "120";
/** @export */ Blockly.Msg.SERIAL_HUE = "200";
/** @export */ Blockly.Msg.ROBOT_HUE = "215";
/** @export */ Blockly.Msg.ULTRASONIC_HUE = "215";
/** @export */ Blockly.Msg.TEXTS_HUE = "160";
/** @export */ Blockly.Msg.GROVE_OUTPUT_HUE = "215";
/** @export */ Blockly.Msg.PROCEDURES_HUE = "290";
/** @export */ Blockly.Msg.COLOUR_HUE = "20";
/** @export */ Blockly.Msg.OTHERS_HUE = "215";
/** @export */ Blockly.Msg.TIMES_HUE = "90";
/** @export */ Blockly.Msg.LISTS_HUE = "260";
/** @export */ Blockly.Msg.LOGIC_HUE = "210";
/** @export */ Blockly.Msg.I2C_MATRIX_HUE = "215";
/** @export */ Blockly.Msg.AEROBOT_HUE = "215";
/** @export */ Blockly.Msg.SHIELD_BOT_HUE = "215";
/** @export */ Blockly.Msg.ADAFRUIT_HUE = "215";
/** @export */ Blockly.Msg.I2C_SEVENSEG_HUE = "215";
/** @export */ Blockly.Msg.GROVE_INPUT_HUE = "215";
/** @export */ Blockly.Msg.ETHERNET_HUE = "215";
/** @export */ Blockly.Msg.INOUT_HUE = "230";
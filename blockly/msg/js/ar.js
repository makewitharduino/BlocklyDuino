// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ar');

goog.require('Blockly.Msg');

/** @export */ Blockly.Msg.ADD_COMMENT = "أضف تعليقًا";
/** @export */ Blockly.Msg.AEROBOT_BACKWARD = "Backward";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_CENTER = "Center";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_DISTSENS_TITLE = "DistSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_DISTSENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_FORWARD = "Forward";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_HELPURL = "http://affordableeducationrobot.github.io/v1.0/";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LIGHTSENS_TITLE = "LightSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LIGHTSENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LINESENS_TITLE = "LineSensor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_LINESENS_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_MOVE_TITLE = "Move";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_MOVE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_NONE = "None";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_TITLE = "Rotate";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_ROTATE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_SETLED_TITLE = "SetLedColor";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_SETLED_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_STOP = "Stop";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_TURN_LEFT = "TurnLeft";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_TURN_RIGHT = "TurnRight";  // untranslated
/** @export */ Blockly.Msg.AEROBOT_WARNING = "Need to install AERobot library";  // untranslated
/** @export */ Blockly.Msg.BLUE = "Blue";  // untranslated
/** @export */ Blockly.Msg.BLYNK_AUTH = "Auth";  // untranslated
/** @export */ Blockly.Msg.BLYNK_CONNECT_TITLE = "Connectted";  // untranslated
/** @export */ Blockly.Msg.BLYNK_CONNECT_TOOLTIP = "Check connection";  // untranslated
/** @export */ Blockly.Msg.BLYNK_EMAIL_TITLE = "Send Email";  // untranslated
/** @export */ Blockly.Msg.BLYNK_EMAIL_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_ETHERNET_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.BLYNK_ETHERNET_BEGIN_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_HELPURL = "https://github.com/blynkkk/blynk-library";  // untranslated
/** @export */ Blockly.Msg.BLYNK_MERGE_PARAM_TITLE = "Get Merge Parameter";  // untranslated
/** @export */ Blockly.Msg.BLYNK_MERGE_PARAM_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_NOTIFY_TITLE = "Push Notify";  // untranslated
/** @export */ Blockly.Msg.BLYNK_NOTIFY_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_PARAM_TITLE = "Get Parameter";  // untranslated
/** @export */ Blockly.Msg.BLYNK_PARAM_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_TWEET_TITLE = "Tweet";  // untranslated
/** @export */ Blockly.Msg.BLYNK_TWEET_TOOPTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_VIRTUAL_WRITE_TITLE = "Send Virtual Value";  // untranslated
/** @export */ Blockly.Msg.BLYNK_VIRTUAL_WRITE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.BLYNK_WRITE_TITLE = "Get Virtual Action";  // untranslated
/** @export */ Blockly.Msg.BLYNK_WRITE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.CANNOT_DELETE_VARIABLE_PROCEDURE = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
/** @export */ Blockly.Msg.CHANGE = "Change";  // untranslated
/** @export */ Blockly.Msg.CHANGE_VALUE_TITLE = "تغيير قيمة:";
/** @export */ Blockly.Msg.CLEAN_UP = "ترتيب القطع";
/** @export */ Blockly.Msg.COL = "Col";  // untranslated
/** @export */ Blockly.Msg.COLLAPSE_ALL = "إخفاء القطع";
/** @export */ Blockly.Msg.COLLAPSE_BLOCK = "إخفاء القطعة";
/** @export */ Blockly.Msg.COLOR = "Color";  // untranslated
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR1 = "اللون 1";
/** @export */ Blockly.Msg.COLOUR_BLEND_COLOUR2 = "اللون 2";
/** @export */ Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
/** @export */ Blockly.Msg.COLOUR_BLEND_RATIO = "نسبة";
/** @export */ Blockly.Msg.COLOUR_BLEND_TITLE = "دمج";
/** @export */ Blockly.Msg.COLOUR_BLEND_TOOLTIP = "دمج لونين ببعضهما البعض بنسبة (0.0 - 1.0).";
/** @export */ Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ar.wikipedia.org/wiki/Color";
/** @export */ Blockly.Msg.COLOUR_PICKER_TOOLTIP = "اختر لون من اللوحة.";
/** @export */ Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
/** @export */ Blockly.Msg.COLOUR_RANDOM_TITLE = "لون عشوائي";
/** @export */ Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "اختر لون بشكل عشوائي.";
/** @export */ Blockly.Msg.COLOUR_RGB_BLUE = "أزرق";
/** @export */ Blockly.Msg.COLOUR_RGB_GREEN = "أخضر";
/** @export */ Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
/** @export */ Blockly.Msg.COLOUR_RGB_RED = "أحمر";
/** @export */ Blockly.Msg.COLOUR_RGB_TITLE = "لون مع";
/** @export */ Blockly.Msg.COLOUR_RGB_TOOLTIP = "إنشئ لون بالكمية المحددة من الأحمر, الأخضر والأزرق. بحيث يجب تكون كافة القيم بين 0 و 100.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "اخرج من الحلقة";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "استمر ابتداءا من التكرار التالي من الحلقة";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "اخرج من الحلقة الحالية.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "تخط ما تبقى من هذه الحلقة، واستمر ابتداءا من التكرار التالي.";
/** @export */ Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "تحذير: يمكن استخدام هذه القطعة فقط داخل حلقة.";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TITLE = "لكل عنصر %1 في قائمة %2";
/** @export */ Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "لكل عنصر في قائمة ما، عين المتغير '%1' لهذا الغنصر، ومن ثم نفذ بعض الأوامر.";
/** @export */ Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_FOR_TITLE = "عد بـ %1 من %2 إلى %3 بمعدل %4";
/** @export */ Blockly.Msg.CONTROLS_FOR_TOOLTIP = "اجعل المتغير  %1 يأخذ القيم من رقم البداية الى رقم النهاية، وقم بالعد داخل المجال المحدد، وطبق أوامر القطع المحددة.";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "إضف شرطا إلى القطعة الشرطية \"إذا\".";
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "أضف شرط \"نهاية، إجمع\" إلى القطعة الشرطية \"إذا\".";
/** @export */ Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "أضف, إزل, أو أعد ترتيب المقاطع لإعادة تكوين القطعة الشرطية \"إذا\".";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSE = "والا";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "وإﻻ إذا";
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_IF = "إذا";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "إذا كانت قيمة ما تساوي صحيح, إذن قم بتنفيذ أمر ما.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "إذا كانت قيمة ما تساوي \"صحيح\"، إذن قم بتنفيذ أول قطعة من الأوامر. والا ،قم بتنفيذ القطعة الثانية من الأوامر.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "إذا كانت القيمة الأولى تساوي \"صحيح\", إذن قم بتنفيذ القطعة الأولى من الأوامر. والا, إذا كانت القيمة الثانية تساوي \"صحيح\", قم بتنفيذ القطعة الثانية من الأوامر.";
/** @export */ Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "إذا كانت القيمة الأولى تساوي \"صحيح\", إذن قم بتنفيذ القطعة الأولى من الأوامر. والا , إذا كانت القيمة الثانية تساوي \"صحيح\", قم بتنفيذ القطعة الثانية من الأوامر. إذا لم تكن هناك أي قيمة تساوي صحيح, قم بتنفيذ آخر قطعة من الأوامر.";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "نفّذ";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TITLE = "كرر  %1 مرات";
/** @export */ Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "نفّذ بعض الأوامر عدة مرات.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "اكرّر حتى";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "اكرّر طالما";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "بما ان القيمة خاطئة, نفّذ بعض الأوامر.";
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "بما ان القيمة صحيحة, نفّذ بعض الأوامر.";
/** @export */ Blockly.Msg.DATA_LENGTH = "Data Length";  // untranslated
/** @export */ Blockly.Msg.DATA_TYPE = "DataType";  // untranslated
/** @export */ Blockly.Msg.DELETE_ALL_BLOCKS = "حذف %1 قطعة؟";
/** @export */ Blockly.Msg.DELETE_BLOCK = "احذف القطعة";
/** @export */ Blockly.Msg.DELETE_VARIABLE = "حذف المتغير %1";
/** @export */ Blockly.Msg.DELETE_VARIABLE_CONFIRMATION = "حذف%1 1 استخدامات المتغير '%2'؟";
/** @export */ Blockly.Msg.DELETE_X_BLOCKS = "احذف %1 قطع";
/** @export */ Blockly.Msg.DEVICE_ID = "DeviceID";  // untranslated
/** @export */ Blockly.Msg.DHT_HELPURL = "https://github.com/adafruit/DHT-sensor-library";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_C = "Temperature C";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_F = "Temperature F";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_H = "Humidity %";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_SENSOR = "Sensor";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_TOOLTIP = "The DHT sensors are made of two parts; a capacitive humidity sensor and a thermistor.";  // untranslated
/** @export */ Blockly.Msg.DHT_READ_TYPE = "Content";  // untranslated
/** @export */ Blockly.Msg.DHT_WARNING = "Need to install the (adafruit) DHT-sensor-library";  // untranslated
/** @export */ Blockly.Msg.DIRECTION = "Direction";  // untranslated
/** @export */ Blockly.Msg.DISABLE_BLOCK = "عطّل القطعة";
/** @export */ Blockly.Msg.DOUBLE = "Double";  // untranslated
/** @export */ Blockly.Msg.DUPLICATE_BLOCK = "مكرر";
/** @export */ Blockly.Msg.ELEVATION = "Elevation";  // untranslated
/** @export */ Blockly.Msg.EMAIL_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.EMAIL_BODY = "Body";  // untranslated
/** @export */ Blockly.Msg.EMAIL_TITLE = "Title";  // untranslated
/** @export */ Blockly.Msg.ENABLE_BLOCK = "أعد تفعيل القطعة";
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_HELPURL = "https://www.arduino.cc/en/Reference/ClientAvailable";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_TITLE = "Clinet.availalbe";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_AVAILABLE_TOOLTIP = "Returns the number of bytes available for reading (that is; the amount of data that has been written to the client by the server it is connected to).";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_DHCP_TITLE = "Begin (DHCP)";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_DHCP_TOOLTIP = "Using Ethernet.begin(mac) with the proper network setup; the Ethernet shield will automatically obtain an IP address.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_HELPURL = "https://www.arduino.cc/en/Reference/EthernetBegin";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_HELPURL = "https://www.arduino.cc/en/Reference/ClientPrintln";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_TITLE = "Client.Println";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINTLN_TOOLTIP = "Print data; followed by a carriage return and newline; to the server a client is connected to. Prints numbers as a sequence of digits; each an ASCII character (e.g. the number 123 is sent as the three characters '1'; '2'; '3').";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_HELPURL = "https://www.arduino.cc/en/Reference/ClientPrint";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_TITLE = "Client.Print";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CLIENT_PRINT_TOOLTIP = "Print data to the server that a client is connected to. Prints numbers as a sequence of digits; each an ASCII character (e.g. the number 123 is sent as the three characters '1'; '2'; '3').";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_HELPURL = "https://www.arduino.cc/en/Reference/ClientConnected";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_TITLE = "Clinet.Connected";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECTED_TOOLTIP = "Returns true if the client is connected; false if not.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_HELPURL = "https://www.arduino.cc/en/Reference/ClientConnect";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_TITLE = "Clinet.Connect";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_CONNECT_TOOLTIP = "Connects to a specified IP address and port. The return value indicates success or failure. Also supports DNS lookups when using a domain name.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_TITLE = "GET Request";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_GET_REQUEST_TOOLTIP = "Create GET Request.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_HELPURL = "https://www.arduino.cc/en/Reference/EthernetLocalIP";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_TITLE = "localIP";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_LOCALIP_TOOLTIP = "Retruns the IP address of the Ethernet shield";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_MAC_ADDRESS_TOOLTIP = "Edit Mac Address";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_DATA = "Data";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_TITLE = "POST Request";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_POST_REQUEST_TOOLTIP = "Create POST Request.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_HELPURL = "https://www.arduino.cc/en/Reference/ClientRead";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_TITLE = "Client.Read";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_READ_TOOLTIP = "Read the next byte received from the server the client is connected to (after the last call to read()).";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_HELPURL = "https://www.arduino.cc/en/Reference/ClientStop";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_TITLE = "Client.Stop";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_STOP_TOOLTIP = "Disconnect from the server.";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_1 = "Eternet";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_2 = "Eternet2";  // untranslated
/** @export */ Blockly.Msg.ETHERNET_VERSION_V2 = "Eternet_v2";  // untranslated
/** @export */ Blockly.Msg.EXPAND_ALL = "وسٌّع القطع";
/** @export */ Blockly.Msg.EXPAND_BLOCK = "وسٌّع القطعة";
/** @export */ Blockly.Msg.EXTERNAL_INPUTS = "ادخال خارجي";
/** @export */ Blockly.Msg.FALLING = "Falling";  // untranslated
/** @export */ Blockly.Msg.GREEN = "Green";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Button";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_TITLE = "Button";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUTTON_TOOLTIP = "Basic digital input";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Buzzer";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_TITLE = "Piezo Buzzer";  // untranslated
/** @export */ Blockly.Msg.GROVE_BUZZER_TOOLTIP = "Emit a tone when the output is high";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Infrared_Emitter";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_SEND_TITLE = "Send";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_SEND_TOOLTIP = "Send Data.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_TITLE = "Infrared Emitter";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_EMITTER_WARNING = "Need to install the (Grove) IRSendRev Library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_CHECK_DATA_TITLE = "Check Data";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_CHECK_DATA_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_DATA_TITLE = "Received Data";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_DATA_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Infrared_Receiver";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_TOOLTIP = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_INIT_WARNING = "Need to install the (Grove) IRSendRev Library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_RECEIVE_TITLE = "Receive";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_RECEIVE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_TITLE = "Infrared Receiver";  // untranslated
/** @export */ Blockly.Msg.GROVE_IR_RECEIVER_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_TITLE = "LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LED_TOOLTIP = "LED";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Light_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_TITLE = "Light Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_LIGHT_SENSOR_TOOLTIP = "output Low Value in bright light. High Value is darkness.";  // untranslated
/** @export */ Blockly.Msg.GROVE_PIN = "PIN#";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_.E2.80.93_Relay";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_TITLE = "Relay";  // untranslated
/** @export */ Blockly.Msg.GROVE_RELAY_TOOLTIP = "capable of switching a much higher voltages and currents. The maximum voltage and current that can be controlled by this module upto 250V at 10 amps.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_AUTOSCROLL_TITLE = "AutoScroll";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_AUTOSCROLL_TOOLTIP = "Turns on automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_TOOLTIP = "Initializes the interface to the LCD screen; and specifies the dimensions (width and height) of the display.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_BEGIN_WARNING = "Need to install the Grove_LCD_RGB_Backlight library.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_CLEAR_TITLE = "Clear";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_CLEAR_TOOLTIP = "Clears the LCD screen and positions the cursor in the upper-left corner.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_LCD_RGB_Backlight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_INIT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalConstructor";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_LEFTTORIGHT_TITLE = "LeftToRight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_LEFTTORIGHT_TOOLTIP = "Set the direction for text written to the LCD to left-to-right; the default.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_NOAUTOSCROLL_TITLE = "NoAutoScroll";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_NOAUTOSCROLL_TOOLTIP = "Turns off automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_PRINT_TITLE = "Print";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_PRINT_TOOLTIP = "Prints text to the LCD.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_RIGHTTOLEFT_TITLE = "RightToLeft";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_RIGHTTOLEFT_TOOLTIP = "Set the direction for text written to the LCD to right-to-left (the default is left-to-right). ";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_LEFT_TITLE = "ScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_LEFT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the left.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_RIGHT_TITLE = "ScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SCROLL_DISPLAY_RIGHT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the right.";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_SETCURSOR_TITLE = "setCursor";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_TITLE = "LCD RGB";  // untranslated
/** @export */ Blockly.Msg.GROVE_RGB_LCD_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Rotary_Angle_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_TITLE = "Rotary Angle";  // untranslated
/** @export */ Blockly.Msg.GROVE_ROTARY_ANGLE_TOOLTIP = "Analog output between 0 and Vcc";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Sound_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_TITLE = "Sound Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_SOUND_SENSOR_TOOLTIP = "Detect the sound strength of the environment";  // untranslated
/** @export */ Blockly.Msg.GROVE_STAT = "Stat";  // untranslated
/** @export */ Blockly.Msg.GROVE_TEMP_SENSOR_TITLE = "Temporature Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_TEMP_SENSOR_TOOLTIP = "return number of ambient temperature in ℃";  // untranslated
/** @export */ Blockly.Msg.GROVE_TILT_SWITCH_TITLE = "Tilt Switch";  // untranslated
/** @export */ Blockly.Msg.GROVE_TILT_SWITCH_TOOLTIP = "When the switch is level it is open; and when tilted; the switch closes.";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_HELPURL = "http://www.seeedstudio.com/wiki/Grove_-_Starter_Kit_v3#Grove_-_Touch_Sensor";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_TITLE = "Touch";  // untranslated
/** @export */ Blockly.Msg.GROVE_TOUCH_TOOLTIP = "Basic digital input";  // untranslated
/** @export */ Blockly.Msg.HELP = "مساعدة";
/** @export */ Blockly.Msg.I2C_MATRIX_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_BEGIN_WARNING = "Need to install the Adafruit-LED-Backpack-Library and the Adafruit-GFX-Library.";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_CLEAR = "Clear";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DIAMETER = "Diamater";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DOTS = "Dots";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWCIRCLE = "DrawCircle";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWCOLON = "drawColon";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWLINE = "DrawLine";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWPIXEL = "DrawPixel";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_DRAWRECT = "DrawRect";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_FILLRECT = "FillRect";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_HELPURL = "https://github.com/adafruit/Adafruit-LED-Backpack-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_LED_OFF = "Led off";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_LED_ON = "Led on";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_NUM = "Num";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_PRINT = "Print";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETCURSOR = "Cursor";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETROTATION = "Rotation";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTCOLOR = "TextColor";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTSIZE = "TextSize";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_SETTEXTWRAP = "TextWrap";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_TEXT = "text";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_TYPE = "Type";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WRITEDIGITNUM = "writeDigitNum";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_WRITEDISPLAY = "WriteDisplay";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X = "x";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X0 = "x0";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_X1 = "x1";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y = "y";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y0 = "y0";  // untranslated
/** @export */ Blockly.Msg.I2C_MATRIX_Y1 = "y1";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_ADDRESS = "Address";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BEGIN_WARNING = "Need to install the Adafruit-LED-Backpack-Library and the Adafruit-GFX-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BOOLEAN_FALSE = "hidden";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_BOOLEAN_TRUE = "display";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_COLON = "Colon";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_DOTS = "Colon";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_HELPURL = "https://github.com/adafruit/Adafruit-LED-Backpack-Library";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_NUM = "Number";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_PRINT = "Print";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_TITLE = "7 Segment";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WARNING = "Need to Begin blocks";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WRITEDIGITNUM = "WriteDigitNum";  // untranslated
/** @export */ Blockly.Msg.I2C_SEVENSEG_WRITEDISPLAY = "WriteDisplay";  // untranslated
/** @export */ Blockly.Msg.IFTTT_EVENT = "Event";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_TITLE = "Create GET Request URL";  // untranslated
/** @export */ Blockly.Msg.IFTTT_GET_URL_TOOLTIP = "Create GET Request URL of IFTTT.";  // untranslated
/** @export */ Blockly.Msg.IFTTT_KEY = "Key";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE1 = "Value1";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE2 = "Value2";  // untranslated
/** @export */ Blockly.Msg.IFTTT_VALUE3 = "Value3";  // untranslated
/** @export */ Blockly.Msg.INDEX = "Index";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_APPENDTEXT = "add setup()";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_HELPURL = "http://www.arduino.cc/en/Reference/Setup";  // untranslated
/** @export */ Blockly.Msg.INITIALIZES_SETUP_TOOLTIP = "The setup() function is called when a sketch starts.";  // untranslated
/** @export */ Blockly.Msg.INLINE_INPUTS = "ادخال خطي";
/** @export */ Blockly.Msg.INOUT_ANALOGPIN_TEXT = "Analog Pin";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_APPENDTEXT = "AnalogRead PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_HELPURL = "http://arduino.cc/en/Reference/AnalogRead";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_READ_TOOLTIP = "Return value between 0 and 1024.";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_APPENDTEXT_PIN = "AnalogWrite PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_APPENDTEXT_VALUE = "value";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_HELPURL = "http://arduino.cc/en/Reference/AnalogWrite";  // untranslated
/** @export */ Blockly.Msg.INOUT_ANALOG_WRITE_TOOLTIP = "Write analog value between 0 and 255 to a specific Port.";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITALPIN_TEXT = "Digital Pin";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_APPENDTEXT_PIN = "DigitalRead PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_APPENDTEXT_PULLUP = "pullup";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_HELPURL = "http://arduino.cc/en/Reference/DigitalRead";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_READ_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_APPENDTEXT_PIN = "DigitalWrite PIN#";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_APPENDTEXT_STAT = "Stat";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_HELPURL = "http://arduino.cc/en/Reference/DigitalWrite";  // untranslated
/** @export */ Blockly.Msg.INOUT_DIGITAL_WRITE_TOOLTIP = "Write digital value to a specific Port.";  // untranslated
/** @export */ Blockly.Msg.INOUT_HIGH = "HIGH";  // untranslated
/** @export */ Blockly.Msg.INOUT_LOW = "LOW";  // untranslated
/** @export */ Blockly.Msg.INOUT_OFF = "OFF";  // untranslated
/** @export */ Blockly.Msg.INOUT_ON = "ON";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_PIN = "Pulsein Pin#";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_TIMEOUT = "Timeout";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_APPENDTEXT_TYPE = "Type";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_HELPURL = "http://arduino.cc/en/Reference/pulseIn";  // untranslated
/** @export */ Blockly.Msg.INOUT_PULSEIN_TOOLTIP = "Reads a pulse (either HIGH or LOW) on a pin.";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_DURATION = "duration";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_FREQ = "frequency";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_APPENDTEXT_PIN = "tone Pin#";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_HELPURL = "http://arduino.cc/en/reference/tone";  // untranslated
/** @export */ Blockly.Msg.INOUT_TONE_TOOLTIP = "The pin can be connected to a piezo buzzer or other speaker to play tones.";  // untranslated
/** @export */ Blockly.Msg.INTEGER = "Integer";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_HELPURL = "https://www.arduino.cc/en/Reference/AttachInterrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_TITLE = "Attach Interrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_ATTACH_TOOLTIP = "The first parameter to attachInterrupt is an interrupt number.";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_HELPURL = "https://www.arduino.cc/en/Reference/DetachInterrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_TITLE = "Detach Interrupt";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_DETACH_TOOLTIP = "Turns off the given interrupt.";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_HELPURL = "https://www.arduino.cc/en/Reference/Interrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_HELPURL = "https://www.arduino.cc/en/Reference/NoInterrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_TITLE = "noInterrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_NO_TOOLTIP = "Disables interrupts (you can re-enable them with interrupts()).";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_TITLE = "interrupts";  // untranslated
/** @export */ Blockly.Msg.INTERRUPTS_TOOLTIP = "Re-enables interrupts (after they've been disabled by noInterrupts()). ";  // untranslated
/** @export */ Blockly.Msg.IOS_CANCEL = "ألغِ";
/** @export */ Blockly.Msg.IOS_ERROR = "خطأ";
/** @export */ Blockly.Msg.IOS_OK = "أوافق";
/** @export */ Blockly.Msg.IOS_PROCEDURES_ADD_INPUT = "+ Add Input";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_ALLOW_STATEMENTS = "Allow statements";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR = "This function has duplicate inputs.";  // untranslated
/** @export */ Blockly.Msg.IOS_PROCEDURES_INPUTS = "INPUTS";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_BUTTON = "أضف";
/** @export */ Blockly.Msg.IOS_VARIABLES_ADD_VARIABLE = "+ Add Variable";  // untranslated
/** @export */ Blockly.Msg.IOS_VARIABLES_DELETE_BUTTON = "احذف";
/** @export */ Blockly.Msg.IOS_VARIABLES_EMPTY_NAME_ERROR = "لا يمكنك استخدام اسم متغير فارغ.";
/** @export */ Blockly.Msg.IOS_VARIABLES_RENAME_BUTTON = "أعد التسمية";
/** @export */ Blockly.Msg.IOS_VARIABLES_VARIABLE_NAME = "اسم المتغير";
/** @export */ Blockly.Msg.IP_ADDRESS = "IP Address";  // untranslated
/** @export */ Blockly.Msg.LATITUDE = "Latitude";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalAutoscroll";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_TITLE = "AutoScroll";  // untranslated
/** @export */ Blockly.Msg.LCD_AUTOSCROLL_TOOLTIP = "Turns on automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalBegin";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_TITLE = "begin";  // untranslated
/** @export */ Blockly.Msg.LCD_BEGIN_TOOLTIP = "Initializes the interface to the LCD screen; and specifies the dimensions (width and height) of the display.";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalClear";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_TITLE = "Clear";  // untranslated
/** @export */ Blockly.Msg.LCD_CLEAR_TOOLTIP = "Clears the LCD screen and positions the cursor in the upper-left corner.";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D4 = "D4";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D5 = "D5";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D6 = "D6";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_D7 = "D7";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_ENABLE = "enable";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalConstructor";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_RS = "rs";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_RW = "rw";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_TITLE = "Pin#";  // untranslated
/** @export */ Blockly.Msg.LCD_INIT_TOOLTIP = "Creates a variable of type LiquidCrystal.";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalLeftToRight";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_TITLE = "LeftToRight";  // untranslated
/** @export */ Blockly.Msg.LCD_LEFTTORIGHT_TOOLTIP = "Set the direction for text written to the LCD to left-to-right; the default.";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalNoAutoscroll";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_TITLE = "NoAutoScroll";  // untranslated
/** @export */ Blockly.Msg.LCD_NOAUTOSCROLL_TOOLTIP = "Turns off automatic scrolling of the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalPrint";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_TITLE = "Print";  // untranslated
/** @export */ Blockly.Msg.LCD_PRINT_TOOLTIP = "Prints text to the LCD.";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalRightToLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_TITLE = "RightToLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_RIGHTTOLEFT_TOOLTIP = "Set the direction for text written to the LCD to right-to-left (the default is left-to-right). ";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_HELPURL = "http://www.arduino.cc/en/Reference/LiquidCrystalScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_TITLE = "ScrollDisplayLeft";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_LEFT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the left.";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_TITLE = "ScrollDisplayRight";  // untranslated
/** @export */ Blockly.Msg.LCD_SCROLL_DISPLAY_RIGHT_TOOLTIP = "Scrolls the contents of the display (text and cursor) one space to the right.";  // untranslated
/** @export */ Blockly.Msg.LCD_SETCURSOR_HELPURL = "http://arduino.cc/en/Reference/LiquidCrystalSetCursor";  // untranslated
/** @export */ Blockly.Msg.LCD_SETCURSOR_TITLE = "setCursor";  // untranslated
/** @export */ Blockly.Msg.LEFT = "Left";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "إنشئ قائمة فارغة";
/** @export */ Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "تقوم بإرجاع قائمة، طولها 0, لا تحتوي على أية سجلات البيانات";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "قائمة";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "أضف, إزل, أو أعد ترتيب المقاطع لإعادة تكوين القطعة قائمة القطع التالية.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "أتشئ قائمة مع";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "أضف عنصرا إلى القائمة.";
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "أنشيء قائمة من أي عدد من العناصر.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FIRST = "أول";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# من نهاية";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET = "احصل على";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "احصل على و ازل";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_LAST = "أخير";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_RANDOM = "عشوائي";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_REMOVE = "ازل";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "يرجع العنصر الأول في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "يقوم بإرجاع العنصر في الموضع المحدد في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "يرجع العنصر الأخير في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "يرجع عنصرا عشوائيا في قائمة.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "يزيل ويرجع العنصر الأول في قائمة.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "يزيل ويقوم بإرجاع العنصر في الموضع المحدد في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "يزيل ويرجع العنصر الأخير في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "يزيل و يرجع عنصرا عشوائيا في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "يزيل العنصر الأول في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM = "يزيل العنصر الموجود في الموضع المحدد في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "يزيل العنصر الأخير في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "يزيل عنصرا عشوائيا في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "إلى # من نهاية";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "إلى #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "إلى الأخير";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "احصل على قائمة فرعية من الأول";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "احصل  على قائمة فرعية من # من نهاية";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "احصل على قائمة فرعية من #";
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "يقوم بإنشاء نسخة من الجزء المحدد من قائمة ما.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_END_TOOLTIP = "%1 هو العنصر الأخير.";
/** @export */ Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1 هو العنصر الأول.";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_FIRST = "ابحث على على التواجد الأول للعنصر";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_INDEX_OF_LAST = "ابحث على التواجد الأخير للعنصر";
/** @export */ Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "تقوم بإرجاع مؤشر التواجد  الأول/الأخير في القائمة.  تقوم بإرجاع %1 إذا لم يتم العثور على النص.";
/** @export */ Blockly.Msg.LISTS_INLIST = "في قائمة";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 فارغ";
/** @export */ Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "يرجع \"صحيح\" إذا كانت القائمة فارغة.";
/** @export */ Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
/** @export */ Blockly.Msg.LISTS_LENGTH_TITLE = "الطول من %1";
/** @export */ Blockly.Msg.LISTS_LENGTH_TOOLTIP = "تقوم بإرجاع طول قائمة.";
/** @export */ Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
/** @export */ Blockly.Msg.LISTS_REPEAT_TITLE = "إنشئ قائمة مع العنصر  %1 %2 مرات";
/** @export */ Blockly.Msg.LISTS_REPEAT_TOOLTIP = "انشئ قائمة تتألف من القيمة المعطاة متكررة لعدد محدد من المرات.";
/** @export */ Blockly.Msg.LISTS_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_MESSAGE0 = "reverse %1";  // untranslated
/** @export */ Blockly.Msg.LISTS_REVERSE_TOOLTIP = "Reverse a copy of a list.";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "مثل";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INSERT = "أدخل في";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_SET = "تعيين";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "يقوم بإدراج هذا العنصر في بداية قائمة.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM = "يقوم بإدخال العنصر في الموضع المحدد في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "ألصق هذا العنصر بنهاية قائمة.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "ادخل العنصر عشوائياً في القائمة.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "يحدد العنصر الأول في قائمة.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM = "يحدد العنصر في الموضع المحدد في قائمة ما.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "يحدد العنصر الأخير في قائمة.";
/** @export */ Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "يحدد عنصرا عشوائيا في قائمة.";
/** @export */ Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "تصاعديا";
/** @export */ Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "تنازليا";
/** @export */ Blockly.Msg.LISTS_SORT_TITLE = "رتب %1 %2 %3";
/** @export */ Blockly.Msg.LISTS_SORT_TOOLTIP = "فرز نسخة من القائمة.";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "أبجديا، وتجاهل الحالة";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "رقمي";
/** @export */ Blockly.Msg.LISTS_SORT_TYPE_TEXT = "أبجديًا";
/** @export */ Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
/** @export */ Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "إعداد قائمة من النصوص";
/** @export */ Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "إعداد نص من القائمة";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "ضم قائمة النصوص في نص واحد، مفصولة بواسطة محدد.";
/** @export */ Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "تقسيم النص إلى قائمة من النصوص، وكسر في كل محدد";
/** @export */ Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "مع محدد";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_FALSE = "خاطئ";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "يرجع صحيح أو خاطئ.";
/** @export */ Blockly.Msg.LOGIC_BOOLEAN_TRUE = "صحيح";
/** @export */ Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "يرجع صحيح إذا كان كلا المدخلات مساوية بعضها البعض.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "يرجع صحيح إذا كان الإدخال الأول أكبر من الإدخال الثاني.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "يرجع صحيح إذا كان الإدخال الأول أكبر من أو يساوي الإدخال الثاني.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "يرجع صحيح إذا كان الإدخال الأول أصغر من الإدخال الثاني.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "يرجع صحيح إذا كان الإدخال الأول أصغر من أو يساوي الإدخال الثاني.";
/** @export */ Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "يرجع صحيح إذا كانت كلا المدخلات غير مساوية لبعضها البعض.";
/** @export */ Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
/** @export */ Blockly.Msg.LOGIC_NEGATE_TITLE = "ليس %1";
/** @export */ Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "يرجع صحيح إذا كان الإدخال خاطئ .  يرجع خاطئ إذا كان الإدخال صحيح.";
/** @export */ Blockly.Msg.LOGIC_NULL = "فارغ";
/** @export */ Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
/** @export */ Blockly.Msg.LOGIC_NULL_TOOLTIP = "ترجع ملغى.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_AND = "و";
/** @export */ Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
/** @export */ Blockly.Msg.LOGIC_OPERATION_OR = "أو";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "ترجع صحيح إذا كان كلا المٌدخلات صحيح.";
/** @export */ Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "ترجع صحيح إذا كان واحد على الأقل من المدخلات صحيح.";
/** @export */ Blockly.Msg.LOGIC_TERNARY_CONDITION = "اختبار";
/** @export */ Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "إذا كانت العبارة خاطئة";
/** @export */ Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "إذا كانت العبارة صحيحة";
/** @export */ Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "تحقق الشرط في 'الاختبار'. إذا كان الشرط صحيح، يقوم بإرجاع قيمة 'اذا كانت العبارة صحيحة'؛ خلاف ذلك يرجع قيمة 'اذا كانت العبارة خاطئة'.";
/** @export */ Blockly.Msg.LONGITUDE = "Longitude";  // untranslated
/** @export */ Blockly.Msg.LOW = "Low";  // untranslated
/** @export */ Blockly.Msg.M2X_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.M2X_BEGIN_TOOLTIP = "Set Config.";  // untranslated
/** @export */ Blockly.Msg.M2X_CUSTOM_LIST_VALUE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_DATE0_TITLE = "Start";  // untranslated
/** @export */ Blockly.Msg.M2X_DATE1_TITLE = "End";  // untranslated
/** @export */ Blockly.Msg.M2X_DELETE_VALUES_TITLE = "Delete Value";  // untranslated
/** @export */ Blockly.Msg.M2X_DELETE_VALUES_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_HELPURL = "https://m2x.att.com/developer/tutorials/arduino";  // untranslated
/** @export */ Blockly.Msg.M2X_KEY = "Access Key";  // untranslated
/** @export */ Blockly.Msg.M2X_LIST_VALUE_TITLE = "Get DataList";  // untranslated
/** @export */ Blockly.Msg.M2X_LIST_VALUE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_LOCATION_NAME = "Location name";  // untranslated
/** @export */ Blockly.Msg.M2X_READ_LOCATION_TITLE = "Read Location";  // untranslated
/** @export */ Blockly.Msg.M2X_READ_LOCATION_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_STREAM_NAME = "Stream Name";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_LOCATION_TITLE = "Update Location";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_LOCATION_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_VALUE_TITLE = "Update";  // untranslated
/** @export */ Blockly.Msg.M2X_UPDATE_VALUE_TOOLTIP = "Update Data to M2X";  // untranslated
/** @export */ Blockly.Msg.MAC_ADDRESS = "Mac Address";  // untranslated
/** @export */ Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ar.wikipedia.org/wiki/%D8%AD%D8%B3%D8%A7%D8%A8%D9%8A%D8%A7%D8%AA";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "يرجع مجموع الرقمين.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "يرجع حاصل قسمة الرقمين.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "يرجع الفرق بين الرقمين.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "يرجع حاصل ضرب الرقمين.";
/** @export */ Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "يرجع الرقم الأول مرفوع إلى تربيع الرقم الثاني.";
/** @export */ Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE = "غير %1 بـ %2";
/** @export */ Blockly.Msg.MATH_CHANGE_TOOLTIP = "إضف رقم إلى متغير '%1'.";
/** @export */ Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
/** @export */ Blockly.Msg.MATH_CONSTANT_TOOLTIP = "ير جع واحد من الثوابت الشائعة : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TITLE = "تقيد %1 منخفض %2 مرتفع %3";
/** @export */ Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "تقييد العددليكون بين الحدود المحددة (ضمناً).";
/** @export */ Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
/** @export */ Blockly.Msg.MATH_IS_DIVISIBLE_BY = "قابل للقسمة";
/** @export */ Blockly.Msg.MATH_IS_EVEN = "هو زوجي";
/** @export */ Blockly.Msg.MATH_IS_NEGATIVE = "هو سالب";
/** @export */ Blockly.Msg.MATH_IS_ODD = "هو فرذي";
/** @export */ Blockly.Msg.MATH_IS_POSITIVE = "هو موجب";
/** @export */ Blockly.Msg.MATH_IS_PRIME = "هو أولي";
/** @export */ Blockly.Msg.MATH_IS_TOOLTIP = "تحقق إذا كان عدد ما زوجيا، فرذيا, أوليا، صحيحا،موجبا أو سالبا، أو إذا كان قابلا للقسمة على عدد معين.  يرجع صحيح أو خاطئ.";
/** @export */ Blockly.Msg.MATH_IS_WHOLE = "هو صحيح";
/** @export */ Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
/** @export */ Blockly.Msg.MATH_MODULO_TITLE = "باقي %1 ÷ %2";
/** @export */ Blockly.Msg.MATH_MODULO_TOOLTIP = "يرجع الباقي من قسمة الرقمين.";
/** @export */ Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
/** @export */ Blockly.Msg.MATH_NUMBER_HELPURL = "https://ar.wikipedia.org/wiki/%D8%B9%D8%AF%D8%AF";
/** @export */ Blockly.Msg.MATH_NUMBER_TOOLTIP = "عدد ما.";
/** @export */ Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "متوسط القائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "الحد الأقصى لقائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "متوسط القائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "الحد الأدنى من قائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "منوال القائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "عنصر عشوائي من القائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "الانحراف المعياري للقائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "مجموع القائمة";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "يرجع المعدل (الوسط الحسابي) للقيم الرقمية في القائمة.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "يرجع أكبر عدد في القائمة.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "يرجع وسيط العدد في القائمة.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "يرجع أصغر رقم في القائمة.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "يرجع قائمة من العنصر أو العناصر الأكثر شيوعاً في القائمة.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "يرجع عنصر عشوائي من القائمة.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "يرجع الانحراف المعياري للقائمة.";
/** @export */ Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "يرجع مجموع كافة الأرقام الموجودة في القائمة.";
/** @export */ Blockly.Msg.MATH_POWER_SYMBOL = "^";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "كسر عشوائي";
/** @export */ Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "يرجع جزء عشوائي بين 0.0 (ضمنياً) و 1.0 (خارجيا).";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TITLE = " عدد صحيح عشوائي من %1 إلى %2";
/** @export */ Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "يرجع عدد صحيح عشوائي بين حدين محددين, ضمنيا.";
/** @export */ Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "تقريب";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "تقريب إلى اصغر عدد صحيح";
/** @export */ Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "تقريب الى اكبر عدد صحيح";
/** @export */ Blockly.Msg.MATH_ROUND_TOOLTIP = "تقريب الى اكبر عدد صحيح أو الى اصغر عدد صحيح.";
/** @export */ Blockly.Msg.MATH_SINGLE_HELPURL = "https://ar.wikipedia.org/wiki/%D8%AC%D8%B0%D8%B1_%D8%AA%D8%B1%D8%A8%D9%8A%D8%B9%D9%8A";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "مطلق";
/** @export */ Blockly.Msg.MATH_SINGLE_OP_ROOT = "الجذر التربيعي";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "يرجع القيمة المطلقة لرقم.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "يرجع ه‍ (e) مرفوعا لأس بقيمة الرقم المدخل.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "يرجع اللوغاريتم الطبيعي لرقم.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "يرجع لوغاريتم عدد معين للاساس 10.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "يرجع عدد سالب.";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "يرجع مضروب الرقم 10 في نفسه .";
/** @export */ Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "يرجع الجذر التربيعي للرقم.";
/** @export */ Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
/** @export */ Blockly.Msg.MATH_TRIG_ACOS = "acos";
/** @export */ Blockly.Msg.MATH_TRIG_ASIN = "asin";
/** @export */ Blockly.Msg.MATH_TRIG_ATAN = "atan";
/** @export */ Blockly.Msg.MATH_TRIG_COS = "جيب تمام";
/** @export */ Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
/** @export */ Blockly.Msg.MATH_TRIG_SIN = "جيب";
/** @export */ Blockly.Msg.MATH_TRIG_TAN = "ظل";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "يرجع قوس جيب التمام لرقم.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "يرجع قوس الجيب للرقم.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "يرجع قوس الظل للرقم.";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "يرجع جيب التمام لدرجة (لا زواية نصف قطرية).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "يرجع جيب التمام لدرجة (لا زواية نصف قطرية).";
/** @export */ Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "يرجع الظل لدرجة (لا دائرة نصف قطرية).";
/** @export */ Blockly.Msg.MODE = "Mode";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_TITLE = "Begin";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_TOOLTIP = "initialize the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_BEGIN_WARNING = "Need to install the Adafruit_MPR121 library.";  // untranslated
/** @export */ Blockly.Msg.MPR121_HELPURL = "https://learn.adafruit.com/adafruit-mpr121-12-key-capacitive-touch-sensor-breakout-tutorial/wiring#download-adafruit-mpr121";  // untranslated
/** @export */ Blockly.Msg.MPR121_POSITION = "Position";  // untranslated
/** @export */ Blockly.Msg.MPR121_RELEASED_TITLE = "Released";  // untranslated
/** @export */ Blockly.Msg.MPR121_RELEASED_TOOLTIP = "relesed the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_RESET_TITLE = "Reset";  // untranslated
/** @export */ Blockly.Msg.MPR121_RESET_TOOLTIP = "Reset the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_TOUCHED_TITLE = "Touched";  // untranslated
/** @export */ Blockly.Msg.MPR121_TOUCHED_TOOLTIP = "touched the sensor";  // untranslated
/** @export */ Blockly.Msg.MPR121_VALUE_TITLE = "Capacitance Value";  // untranslated
/** @export */ Blockly.Msg.MPR121_VALUE_TOOLTIP = "value of capacitance";  // untranslated
/** @export */ Blockly.Msg.MPR121_WARNING = "Need to Begin block.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_BRIGHTNESS = "Brightness";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_NUM = "LED Num";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_SETTING = "Init";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_TOOLTIP = "This initializes the NeoPixel library.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_BEGIN_WARNING = "Need to install the Adafruit_NeoPixel Library.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_B = "B";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_G = "G";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_R = "R";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_CUSTOM_SETPIXELCOLOR_TOOLTIP = "pixels.Color takes RGB values; from 0;0;0 up to 255;255;255";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SETPIXELCOLOR_TOOLTIP = "Set pixels.Color.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SHOW = "Show";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_SHOW_TOOLTIP = "This sends the updated pixel color to the hardware.";  // untranslated
/** @export */ Blockly.Msg.NEOPIXEL_WARNING = "Need to Begin Block.";  // untranslated
/** @export */ Blockly.Msg.NEW_VARIABLE = "إنشاء متغير...";
/** @export */ Blockly.Msg.NEW_VARIABLE_TITLE = "اسم المتغير الجديد:";
/** @export */ Blockly.Msg.OFF = "Off";  // untranslated
/** @export */ Blockly.Msg.ON = "On";  // untranslated
/** @export */ Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
/** @export */ Blockly.Msg.PIN = "Pin";  // untranslated
/** @export */ Blockly.Msg.PORT = "Port";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "اسمح بالبيانات";
/** @export */ Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "مع:";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";
/** @export */ Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "تشغيل الدالة المعرفة من قبل المستخدم '%1'.";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Subroutine";
/** @export */ Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "تشغيل الدالة المعرفة من قبل المستخدم %1 واستخدام  مخرجاتها.";
/** @export */ Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "مع:";
/** @export */ Blockly.Msg.PROCEDURES_CREATE_DO = "إنشئ '%1'";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "صف هذه الوظيفة...";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "القيام بشيء ما";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "إلى";
/** @export */ Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "انشئ دالة بدون مخرجات .";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "يرجع";
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "انشئ دالة مع المخرجات.";
/** @export */ Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "تحذير: هذه الدالة تحتوي على معلمات مكررة.";
/** @export */ Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "تسليط الضوء على تعريف الدالة";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "إذا كانت القيمة صحيحة ، اذان قم بارجاع القيمة الثانية.";
/** @export */ Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "تحذير:هذه القطعة تستخدم فقط داخل تعريف دالة.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "اسم الإدخال:";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "أضف مدخلا إلى الوظيفة.";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "المدخلات";
/** @export */ Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "إضافة أو إزالة أو إعادة ترتيب المدخلات لهذه المهمة.";
/** @export */ Blockly.Msg.RED = "Red";  // untranslated
/** @export */ Blockly.Msg.REDO = "إعادة";
/** @export */ Blockly.Msg.REMOVE_COMMENT = "أزل التعليق";
/** @export */ Blockly.Msg.RENAME_VARIABLE = "إعادة تسمية المتغير...";
/** @export */ Blockly.Msg.RENAME_VARIABLE_TITLE = "إعادة تسمية كافة المتغيرات '%1' إلى:";
/** @export */ Blockly.Msg.RGBLED_BEGIN_BRIGHTNESS = "Brightness";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_NUM = "LED Num";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_PIN = "Pin#";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_SETTING = "Init";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_TOOLTIP = "This initializes the NeoPixel library.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_BEGIN_WARNING = "Need to install the Adafruit_NeoPixel Library.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_B = "B";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_G = "G";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_R = "R";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.RGBLED_CUSTOM_SETPIXELCOLOR_TOOLTIP = "pixels.Color takes RGB values; from 0;0;0 up to 255;255;255";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SETPIXELCOLOR_TARGET = "Target";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SETPIXELCOLOR_TOOLTIP = "Set pixels.Color.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW = "Show";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW_HELPURL = "https://github.com/adafruit/Adafruit_NeoPixel";  // untranslated
/** @export */ Blockly.Msg.RGBLED_SHOW_TOOLTIP = "This sends the updated pixel color to the hardware.";  // untranslated
/** @export */ Blockly.Msg.RGBLED_WARNING = "Need to Begin Block.";  // untranslated
/** @export */ Blockly.Msg.RIGHT = "Right";  // untranslated
/** @export */ Blockly.Msg.RISING = "Rising";  // untranslated
/** @export */ Blockly.Msg.ROW = "Row";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_APPENDTEXT = "Serial Available";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_HELPURL = "http://www.arduino.cc/en/Serial/available";  // untranslated
/** @export */ Blockly.Msg.SERIAL_AVAILABLE_TOOLTIP = "Get the number of bytes (characters) available for reading from the serial port.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER = "Byte Code of Number";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER_TEXT1 = "Byte code of";  // untranslated
/** @export */ Blockly.Msg.SERIAL_BYTE_NUMBER_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_APPENDTEXT = "Serial Println";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_HELPURL = "http://www.arduino.cc/en/Serial/Println";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINTLN_TOOLTIP = "Prints data to the serial port as human-readable ASCII text followed by a carriage return character and a newline characte.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_APPENDTEXT = "Serial Print";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_HELPURL = "http://www.arduino.cc/en/Serial/Print";  // untranslated
/** @export */ Blockly.Msg.SERIAL_PRINT_TOOLTIP = "Prints data to the console/serial port as human-readable ASCII text.";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_APPENDTEXT = "Serial Read";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_HELPURL = "http://www.arduino.cc/en/Serial/Read";  // untranslated
/** @export */ Blockly.Msg.SERIAL_READ_TOOLTIP = "the first byte of incoming serial data available (or -1 if no data is available).";  // untranslated
/** @export */ Blockly.Msg.SERVER = "Server";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_TEXT1 = "Angle";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_US_TEXT1 = "Angle(uS)";  // untranslated
/** @export */ Blockly.Msg.SERVO_ANGLE_US_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_HELPURL = "http://www.arduino.cc/en/Reference/ServoAttached";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TEXT1 = "Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TEXT2 = "Attached?";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACHED_TOOLTIP = "Check whether the Servo variable is attached to a pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_HELPURL = "http://www.arduino.cc/en/Reference/ServoAttach";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MAX_TEXT1 = "Max";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MAX_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MIN_TEXT1 = "Min";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_MIN_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TEXT1 = "Attach Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_ATTACH_TOOLTIP = "Attach the Servo variable to a pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_HELPURL = "http://www.arduino.cc/en/Reference/ServoDetach";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TEXT1 = "Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TEXT2 = "Detach";  // untranslated
/** @export */ Blockly.Msg.SERVO_DETACH_TOOLTIP = "Detach the Servo variable from its pin.";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_HELPURL = "http://www.arduino.cc/en/Reference/ServoRead";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TEXT1 = "Read Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TEXT2 = "Current Angle";  // untranslated
/** @export */ Blockly.Msg.SERVO_READ_TOOLTIP = "Read the current angle of the servo (the value passed to the last call to write()).";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_HELPURL = "http://www.arduino.cc/en/Reference/ServoWrite";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TEXT1 = "Write Pin";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TEXT2 = "";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_TOOLTIP = "Writes a value to the servo; controlling the shaft accordingly.";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_US_HELPURL = "http://www.arduino.cc/en/Reference/ServoWriteMicroseconds";  // untranslated
/** @export */ Blockly.Msg.SERVO_WRITE_US_TOOLTIP = "Writes a value in microSeconds(uS) to the servo; controlling the shaft accordingly.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_BACKWARD = "Backward";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_CONTROL = "Control";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_DRIVE_TITLE = "Drive";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_DRIVE_TOOLTIP = "All purpose drive call. Calls leftMotor and rightMotor directly.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_LEFTTOOLTIP = "Disables the left motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_LEFT_TITLE = "FastStop(left)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_RIGHT_TITLE = "FastStop(right)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_RIGHT_TOOLTIP = "Disables the right motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_TITLE = "FastStop";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FASTSTOP_TOOLTIP = "Disables the motor quicker. This is considered possibly bad for the motor chip so use at your discretion.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_FORWARD = "Forward";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_HELPURL = "http://www.seeedstudio.com/wiki/Shield_Bot_V1.2";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_LEFT_SPEED = "Left";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOTOR = "Motor";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOTOR_TOOLTIP = "Enables the right or left motor; negative for backwards; positive for forwards.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOVE_TITLE = "Move";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_MOVE_TOOLTIP = "Move Carbot.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_READ_SENSOR_TITLE = "Read Sensor";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_READ_SENSOR_TOOLTIP = "Reads any of the 5 light sensors on board.";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_RIGHT_SPEED = "Right";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_LR_TOOLTIP = "Write a max speed to the left and right motor. Between 0(basically off) and 255(full speed)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_TITLE = "MotorSpeed";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_SETMAXSPEED_TOOLTIP = "Set max speed of two motors. Between 0(basically off) and 255(full speed)";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOP = "Stop";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOPLEFT = "StopLeft";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_STOPRIGHT = "StopRight";  // untranslated
/** @export */ Blockly.Msg.SHIELD_BOT_WARNING = "Need to install Shield Bot 1.2 library";  // untranslated
/** @export */ Blockly.Msg.STRING = "String";  // untranslated
/** @export */ Blockly.Msg.TEXT = "Text";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_APPEND_TITLE = "إلى %1 إلصق نص %2";
/** @export */ Blockly.Msg.TEXT_APPEND_TOOLTIP = "إلصق جزءا من النص إلى متغير '%1'.";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "الى حروف صغيرة";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "الى حروف العنوان";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "الى حروف كبيرة";
/** @export */ Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "يرجع نسخة من النص في حالة مختلفة.";
/** @export */ Blockly.Msg.TEXT_CHARAT_FIRST = "احصل على الحرف الأول";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_END = "الحصول على الحرف # من نهاية";
/** @export */ Blockly.Msg.TEXT_CHARAT_FROM_START = "الحصول على الحرف #";
/** @export */ Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_LAST = "احصل على آخر حرف";
/** @export */ Blockly.Msg.TEXT_CHARAT_RANDOM = "الحصول على حرف عشوائي";
/** @export */ Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TITLE = "in text %1 %2";  // untranslated
/** @export */ Blockly.Msg.TEXT_CHARAT_TOOLTIP = "يرجع حرف ما في الموضع المحدد.";
/** @export */ Blockly.Msg.TEXT_COUNT_HELPURL = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
/** @export */ Blockly.Msg.TEXT_COUNT_MESSAGE0 = "count %1 in %2";  // untranslated
/** @export */ Blockly.Msg.TEXT_COUNT_TOOLTIP = "Count how many times some text occurs within some other text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "إضف عنصر إلى النص.";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "الانضمام إلى";
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "أضف, إحذف, أو أعد ترتيب المقاطع لإعادة تكوين النص من القطع التالية.";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "إلى حرف # من نهاية";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "إلى حرف #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "إلى آخر حرف";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "في النص";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "الحصول على سلسلة فرعية من الحرف الأول";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "الحصول على سلسلة حروف فرعية من الحرف # من نهاية";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "الحصول على سلسلة حروف فرعية من الحرف #";
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
/** @export */ Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "يرجع جزء معين من النص.";
/** @export */ Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "ابحث عن التواجد الأول للنص";
/** @export */ Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "ابحث عن التواجد الأخير للنص";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TITLE = "في النص %1 %2 %3";
/** @export */ Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "تقوم بإرجاع مؤشر التواجد الأول/الأخير للنص الأول في النص الثاني.  تقوم بإرجاع %1 إذا لم يتم العثور على النص.";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 فارغ";
/** @export */ Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "يرجع \"صحيح\" إذا كان النص المقدم فارغ.";
/** @export */ Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
/** @export */ Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "انشئ نص مع";
/** @export */ Blockly.Msg.TEXT_JOIN_TOOLTIP = "أنشئ جزء من النص بالصاق أي عدد من العناصر ببعضها البعض.";
/** @export */ Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
/** @export */ Blockly.Msg.TEXT_LENGTH_TITLE = "طول %1";
/** @export */ Blockly.Msg.TEXT_LENGTH_TOOLTIP = "تقوم بإرجاع عدد الاحرف (بما في ذلك الفراغات) في النص المقدم.";
/** @export */ Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_PRINT_TITLE = "اطبع %1";
/** @export */ Blockly.Msg.TEXT_PRINT_TOOLTIP = "اطبع النص المحدد أو العدد أو قيمة أخرى.";
/** @export */ Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "انتظر ادخال المستخذم لرقم ما.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "انتظر ادخال المستخدم لنص ما.";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "انتظر ادخال المستخدم لرقم ما مع اظهار رسالة";
/** @export */ Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "انتظر ادخال المستخدم لنص ما مع اظهار رسالة";
/** @export */ Blockly.Msg.TEXT_REPLACE_HELPURL = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
/** @export */ Blockly.Msg.TEXT_REPLACE_MESSAGE0 = "replace %1 with %2 in %3";  // untranslated
/** @export */ Blockly.Msg.TEXT_REPLACE_TOOLTIP = "Replace all occurances of some text within some other text.";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_HELPURL = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_MESSAGE0 = "reverse %1";  // untranslated
/** @export */ Blockly.Msg.TEXT_REVERSE_TOOLTIP = "يعكس ترتيب حروف النص";
/** @export */ Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
/** @export */ Blockly.Msg.TEXT_TEXT_TOOLTIP = "حرف أو كلمة أو سطر من النص.";
/** @export */ Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "إزالة الفراغات من كلا الجانبين";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "إزالة الفراغات من الجانب الأيسر من";
/** @export */ Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "إزالة الفراغات من الجانب الأيمن من";
/** @export */ Blockly.Msg.TEXT_TRIM_TOOLTIP = "يرجع نسخة من النص مع حذف من أحد أو كلا الفراغات من أطرافه.";
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_APPENDTEXT = "delayMicroseconds";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_HELPURL = "http://arduino.cc/en/Reference/DelayMicroseconds";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAYMICROSECONDS_TOOLTIP = "Pauses the program for the amount of time (in microseconds) specified as parameter.";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_APPENDTEXT = "delay";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_HELPURL = "http://arduino.cc/en/Reference/delay";  // untranslated
/** @export */ Blockly.Msg.TIMES_DELAY_TOOLTIP = "Delay specific time";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_APPENDTEXT = "micros";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_HELPURL = "hhttp://arduino.cc/en/Reference/Micros";  // untranslated
/** @export */ Blockly.Msg.TIMES_MICROS_TOOLTIP = "Returns the number of microseconds since the Arduino board began running the current program.";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_APPENDTEXT = "millis";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_HELPURL = "hhttp://arduino.cc/en/Reference/Millis";  // untranslated
/** @export */ Blockly.Msg.TIMES_MILLIS_TOOLTIP = "Returns the number of milliseconds since the Arduino board began running the current program.";  // untranslated
/** @export */ Blockly.Msg.TODAY = "اليوم";
/** @export */ Blockly.Msg.ULTRASONIC_DISTANCE_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_DISTANCE_TITLE = "Distance";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_HELPURL = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_TITLE = "MaxRange";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_MAXRANGE_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_ECHO = "Echo";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_RESET = "Reset";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TITLE = "Pin#";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TOOLTIP = "";  // untranslated
/** @export */ Blockly.Msg.ULTRASONIC_SETTING_TRIG = "Trig";  // untranslated
/** @export */ Blockly.Msg.UNDO = "رجوع";
/** @export */ Blockly.Msg.URL = "URL";  // untranslated
/** @export */ Blockly.Msg.VALUE = "Value";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_DEFAULT_NAME = "البند";
/** @export */ Blockly.Msg.VARIABLES_GET_CREATE_SET = "انشئ 'التعيين %1'";
/** @export */ Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_GET_TOOLTIP = "يرجع قيمة هذا المتغير.";
/** @export */ Blockly.Msg.VARIABLES_SET = "تعيين %1 إلى %2";
/** @export */ Blockly.Msg.VARIABLES_SET_CREATE_GET = "انشئ 'احصل على %1'";
/** @export */ Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
/** @export */ Blockly.Msg.VARIABLES_SET_TOOLTIP = "تعيين هذا المتغير لتكون مساوية للقيمة المدخلة.";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS = "المتغير '%1' موجود بالفعل";
/** @export */ Blockly.Msg.VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE = "A variable named '%1' already exists for another variable of type '%2'.";  // untranslated
/** @export */ Blockly.Msg.YELLOW = "Yellow";  // untranslated
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
/** @export */ Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
/** @export */ Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
/** @export */ Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
/** @export */ Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
/** @export */ Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
/** @export */ Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
/** @export */ Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
/** @export */ Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
/** @export */ Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;

/** @export */ Blockly.Msg.MATH_HUE = "230";
/** @export */ Blockly.Msg.VARIABLES_HUE = "330";
/** @export */ Blockly.Msg.SERVO_HUE = "215";
/** @export */ Blockly.Msg.GROVE_HUE = "215";
/** @export */ Blockly.Msg.RGBLED_HUE = "215";
/** @export */ Blockly.Msg.MPR121_HUE = "215";
/** @export */ Blockly.Msg.INITIALIZES_HUE = "230";
/** @export */ Blockly.Msg.BLYNK_HUE = "215";
/** @export */ Blockly.Msg.M2X_HUE = "215";
/** @export */ Blockly.Msg.IFTTT_HUE = "215";
/** @export */ Blockly.Msg.INTERRUPTS_HUE = "190";
/** @export */ Blockly.Msg.NEOPIXEL_HUE = "215";
/** @export */ Blockly.Msg.LOOPS_HUE = "120";
/** @export */ Blockly.Msg.SERIAL_HUE = "200";
/** @export */ Blockly.Msg.ROBOT_HUE = "215";
/** @export */ Blockly.Msg.ULTRASONIC_HUE = "215";
/** @export */ Blockly.Msg.TEXTS_HUE = "160";
/** @export */ Blockly.Msg.GROVE_OUTPUT_HUE = "215";
/** @export */ Blockly.Msg.PROCEDURES_HUE = "290";
/** @export */ Blockly.Msg.COLOUR_HUE = "20";
/** @export */ Blockly.Msg.OTHERS_HUE = "215";
/** @export */ Blockly.Msg.TIMES_HUE = "90";
/** @export */ Blockly.Msg.LISTS_HUE = "260";
/** @export */ Blockly.Msg.LOGIC_HUE = "210";
/** @export */ Blockly.Msg.I2C_MATRIX_HUE = "215";
/** @export */ Blockly.Msg.AEROBOT_HUE = "215";
/** @export */ Blockly.Msg.SHIELD_BOT_HUE = "215";
/** @export */ Blockly.Msg.ADAFRUIT_HUE = "215";
/** @export */ Blockly.Msg.I2C_SEVENSEG_HUE = "215";
/** @export */ Blockly.Msg.GROVE_INPUT_HUE = "215";
/** @export */ Blockly.Msg.ETHERNET_HUE = "215";
/** @export */ Blockly.Msg.INOUT_HUE = "230";